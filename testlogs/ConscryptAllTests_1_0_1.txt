exec ${PAGER:-/usr/bin/less} "$0" || exit 1
-----------------------------------------------------------------------------
JUnit4 Test Runner
.testDefaultTagSizeAlgorithmParameterGenerator:java.security.NoSuchAlgorithmException: GCM AlgorithmParameterGenerator not available
......E......E.....
Provider:Conscrypt
AlgorithmParameters.AES
AlgorithmParameters.ChaCha20
AlgorithmParameters.DESEDE
AlgorithmParameters.EC
AlgorithmParameters.GCM
AlgorithmParameters.OAEP
CertificateFactory.X509
Cipher.AES/CBC/NoPadding
Cipher.AES/CBC/NoPadding SupportedKeyFormats
Cipher.AES/CBC/PKCS5Padding
Cipher.AES/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES/CTR/NoPadding
Cipher.AES/CTR/NoPadding SupportedKeyFormats
Cipher.AES/ECB/NoPadding
Cipher.AES/ECB/NoPadding SupportedKeyFormats
Cipher.AES/ECB/PKCS5Padding
Cipher.AES/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES/GCM/NoPadding
Cipher.AES/GCM/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/NoPadding
Cipher.AES_128/CBC/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/PKCS5Padding
Cipher.AES_128/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/ECB/NoPadding
Cipher.AES_128/ECB/NoPadding SupportedKeyFormats
Cipher.AES_128/ECB/PKCS5Padding
Cipher.AES_128/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/GCM/NoPadding
Cipher.AES_128/GCM/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/NoPadding
Cipher.AES_256/CBC/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/PKCS5Padding
Cipher.AES_256/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/ECB/NoPadding
Cipher.AES_256/ECB/NoPadding SupportedKeyFormats
Cipher.AES_256/ECB/PKCS5Padding
Cipher.AES_256/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/GCM/NoPadding
Cipher.AES_256/GCM/NoPadding SupportedKeyFormats
Cipher.ARC4
Cipher.ARC4 SupportedKeyFormats
Cipher.ChaCha20
Cipher.ChaCha20 SupportedKeyFormats
Cipher.ChaCha20/Poly1305/NoPadding
Cipher.ChaCha20/Poly1305/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/NoPadding
Cipher.DESEDE/CBC/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/PKCS5Padding
Cipher.DESEDE/CBC/PKCS5Padding SupportedKeyFormats
Cipher.RSA/ECB/NoPadding
Cipher.RSA/ECB/NoPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPPadding
Cipher.RSA/ECB/OAEPPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/PKCS1Padding
Cipher.RSA/ECB/PKCS1Padding SupportedKeyClasses
KeyAgreement.ECDH
KeyAgreement.ECDH SupportedKeyClasses
KeyAgreement.ECDH SupportedKeyFormats
KeyFactory.EC
KeyFactory.RSA
KeyGenerator.AES
KeyGenerator.ChaCha20
KeyGenerator.DESEDE
KeyGenerator.HmacMD5
KeyGenerator.HmacSHA1
KeyGenerator.HmacSHA224
KeyGenerator.HmacSHA256
KeyGenerator.HmacSHA384
KeyGenerator.HmacSHA512
KeyPairGenerator.EC
KeyPairGenerator.RSA
Mac.HmacMD5
Mac.HmacMD5 SupportedKeyClasses
Mac.HmacMD5 SupportedKeyFormats
Mac.HmacSHA1
Mac.HmacSHA1 SupportedKeyClasses
Mac.HmacSHA1 SupportedKeyFormats
Mac.HmacSHA224
Mac.HmacSHA224 SupportedKeyClasses
Mac.HmacSHA224 SupportedKeyFormats
Mac.HmacSHA256
Mac.HmacSHA256 SupportedKeyClasses
Mac.HmacSHA256 SupportedKeyFormats
Mac.HmacSHA384
Mac.HmacSHA384 SupportedKeyClasses
Mac.HmacSHA384 SupportedKeyFormats
Mac.HmacSHA512
Mac.HmacSHA512 SupportedKeyClasses
Mac.HmacSHA512 SupportedKeyFormats
MessageDigest.MD5
MessageDigest.SHA-1
MessageDigest.SHA-224
MessageDigest.SHA-256
MessageDigest.SHA-384
MessageDigest.SHA-512
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SSLContext.Default
SSLContext.SSL
SSLContext.TLS
SSLContext.TLSv1
SSLContext.TLSv1.1
SSLContext.TLSv1.2
SecretKeyFactory.DESEDE
SecureRandom.SHA1PRNG
SecureRandom.SHA1PRNG ImplementedIn
Signature.MD5WithRSA
Signature.MD5WithRSA SupportedKeyClasses
Signature.MD5WithRSA SupportedKeyFormats
Signature.NONEwithECDSA
Signature.NONEwithECDSA SupportedKeyClasses
Signature.NONEwithECDSA SupportedKeyFormats
Signature.NONEwithRSA
Signature.NONEwithRSA SupportedKeyClasses
Signature.SHA1WithRSA
Signature.SHA1WithRSA SupportedKeyClasses
Signature.SHA1WithRSA SupportedKeyFormats
Signature.SHA1withECDSA
Signature.SHA1withECDSA SupportedKeyClasses
Signature.SHA1withECDSA SupportedKeyFormats
Signature.SHA1withRSA/PSS
Signature.SHA1withRSA/PSS SupportedKeyClasses
Signature.SHA1withRSA/PSS SupportedKeyFormats
Signature.SHA224WithRSA
Signature.SHA224WithRSA SupportedKeyClasses
Signature.SHA224WithRSA SupportedKeyFormats
Signature.SHA224withECDSA
Signature.SHA224withECDSA SupportedKeyClasses
Signature.SHA224withECDSA SupportedKeyFormats
Signature.SHA224withRSA/PSS
Signature.SHA224withRSA/PSS SupportedKeyClasses
Signature.SHA224withRSA/PSS SupportedKeyFormats
Signature.SHA256WithRSA
Signature.SHA256WithRSA SupportedKeyClasses
Signature.SHA256WithRSA SupportedKeyFormats
Signature.SHA256withECDSA
Signature.SHA256withECDSA SupportedKeyClasses
Signature.SHA256withECDSA SupportedKeyFormats
Signature.SHA256withRSA/PSS
Signature.SHA256withRSA/PSS SupportedKeyClasses
Signature.SHA256withRSA/PSS SupportedKeyFormats
Signature.SHA384WithRSA
Signature.SHA384WithRSA SupportedKeyClasses
Signature.SHA384WithRSA SupportedKeyFormats
Signature.SHA384withECDSA
Signature.SHA384withECDSA SupportedKeyClasses
Signature.SHA384withECDSA SupportedKeyFormats
Signature.SHA384withRSA/PSS
Signature.SHA384withRSA/PSS SupportedKeyClasses
Signature.SHA384withRSA/PSS SupportedKeyFormats
Signature.SHA512WithRSA
Signature.SHA512WithRSA SupportedKeyClasses
Signature.SHA512WithRSA SupportedKeyFormats
Signature.SHA512withECDSA
Signature.SHA512withECDSA SupportedKeyClasses
Signature.SHA512withECDSA SupportedKeyFormats
Signature.SHA512withRSA/PSS
Signature.SHA512withRSA/PSS SupportedKeyClasses
Signature.SHA512withRSA/PSS SupportedKeyFormats
.E.E.Skipping testAesEax
.E.E.Skipping testAesEax
.E..java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
..Encoded ECPrivateKey:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b020101042090206439cdd7661e4e527909a654c47cdeba8a74c2312f7a7898fdf5b0da2ef3a1440342000448eb5ddcddadeb2cdbb9c8c27b7159061f8f2f3bc231a49fca23484541e54959b4d4695a08c6e916ccddedeff1ee88dd1520254287a4470eceefd72a060559ba
...testWrongOrder: ECDHC not supported
testWrongOrder: ECDHC not supported
..testModifiedPublic:public point not on curve throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:public point = (0,0) throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 26959946660873538060741835960514744168612397095220107664918121663170 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = 2 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = None throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:modified prime throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:06000066:public key routines:OPENSSL_internal:DECODE_ERROR
testModifiedPublic:a = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = -1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testWrongOrder: ECDHC not supported
.Generated shared secret with a modified order:ECDH
expected:6f2960c4c0067bd2f24b708b3518d91be3a886c3eec7017cc67bce3876b788b4 computed:6f2960c4c0067bd2f24b708b3518d91be3a886c3eec7017cc67bce3876b788b4
testWrongOrder: can't modify order.
..testModifiedPublic:public point not on curve throws java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0f000078:elliptic curve routines:OPENSSL_internal:POINT_IS_NOT_ON_CURVE
testModifiedPublic:public point = (0,0) throws java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0f000078:elliptic curve routines:OPENSSL_internal:POINT_IS_NOT_ON_CURVE
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: java.security.InvalidAlgorithmParameterException: EC_GROUP_new_arbitrary failed
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: java.security.InvalidAlgorithmParameterException: EC_GROUP_new_arbitrary failed
modified prime throws java.lang.IllegalArgumentException: first coefficient is too large
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
testModifiedPublic:a = 0 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.lang.IllegalArgumentException: n is not positive
order = 0 throws java.lang.IllegalArgumentException: n is not positive
cofactor = -1 throws java.lang.IllegalArgumentException: h is not positive
cofactor = 0 throws java.lang.IllegalArgumentException: h is not positive
testWrongOrder: ECDHC not supported
.....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Curve:secp256r1
Order:115792089210356248762697446949407573529996955224135760342422259061068512044369
Private key:
S:107806941237965570257620637023063029008424051804378219911209126844941717138712
encoded:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b0201010420ee5890ff443f70f40a5d5955a934b39ccda0e57c90836c76e42d8b029b9eed18a14403420004bb0fc2bd1e36c9ede2041a7ee5cc201135fc7f65c7cdb77bb3fb7b615ac51b5e37eb917aa36f1edc91fc4d7d0b994d74825d598218f572ecc65b1596731faacd
Public key:
X:84610349428445595400943507091846916029226818650519631819221575886489147218782
Y:25293419791847965588235886617770919842964860405504085712645923663847232613069
encoded:3059301306072a8648ce3d020106082a8648ce3d03010703420004bb0fc2bd1e36c9ede2041a7ee5cc201135fc7f65c7cdb77bb3fb7b615ac51b5e37eb917aa36f1edc91fc4d7d0b994d74825d598218f572ecc65b1596731faacd
Signature:3045022100a1a5093886f6ac0e821a23de3728d359ad39cf5367d1ffdc81e6737887dbacbc02200d5211ee4b5a7049ef0c4640b25f62bf6a56092c9764e85f2ddcc2273ed609fb
r:73113962027281778516271397773330681495847310853952699574239066579472702221500
s:6025072244985118954148040432154078601830275894723289584064072622099035195899
.Conscrypt curve:secp256r1 countLsb:492 countMsb:523
Conscrypt curve:secp224r1 countLsb:511 countMsb:514
Conscrypt curve:secp384r1 countLsb:519 countMsb:509
Conscrypt curve:secp521r1 countLsb:504 countMsb:520
Conscrypt curve:brainpoolP256r1 countLsb:519 countMsb:541
..testTiming algorithm:SHA256WithECDSA
count:50000 cutoff:496584 relative average:1.0033270559493157 sigmas:1.288563228359975
count:25072 cutoff:44010 relative average:1.0020556509587657 sigmas:0.5637732844036017
count:12514 cutoff:43809 relative average:1.0098093320473396 sigmas:1.9006324437828912
count:6266 cutoff:43675 relative average:1.0109280220656731 sigmas:1.4982951920442165
count:3146 cutoff:43567 relative average:1.0053338588260263 sigmas:0.5181810221083829
count:1563 cutoff:43481 relative average:0.9823225673071267 sigmas:1.2104847116668942
count:782 cutoff:43416 relative average:0.9859774849878651 sigmas:0.679187864559564
count:391 cutoff:43354 relative average:1.0030976053806344 sigmas:0.1060901579668011
count:199 cutoff:43302 relative average:1.0061107198451844 sigmas:0.14930678325085778
count:99 cutoff:43247 relative average:1.0108814970843056 sigmas:0.18752832506674416
count:49 cutoff:43100 relative average:1.0458433753837038 sigmas:0.5558213874851916
count:25 cutoff:42428 relative average:1.009396436721696 sigmas:0.0813755290604177
count:13 cutoff:41268 relative average:0.9666428444206673 sigmas:0.2083153698251968
..................testDefaultSize: keysize=2048
....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Public key:
Modulus:29729202879896619468317860034339249249001613202369739370188755920704840125631090832057060293315721600387588254558027164811598810011360154236284893000321427792001520413360970808954222714006053742419274657308575133915488685109767516678405394914593579401215175119161928577617758649746960558617926011688149647886555110698780818881370164574325600849941779936032150945595381238103008114964412679275336371783228383432794362359578602132721152460057896795180696145750595550599425293256257549417070470266752844608602812709175867850762931702677524813881360876743328029050481741733552856335301127282449423925050095784850581227399
E:65537
encoded:30820122300d06092a864886f70d01010105000382010f003082010a0282010100eb802a99eb94b9534f9535081687f74a328b90f81bc87b160bb1f4b4bf9ba7cbcc9c3857ff8425d4e6424fa09ec3d7d5860d175380919d9967ec66c6c2a9c0fe03906d1fdaaa93c83cc5487ffdf843e186330a2a1d459906e94cabe5e161a673ff1db5845b831e336dbe01b30a4bfb8b9697316f7bbffd752ec8900daa789e41144e6c462b0b3800ec0e3672c7364ce5cf7c1af689528e98146f4d53d1bc785909c964c05889ec75fad497b395a5cf31df4062cdc9c7d8ddc8449c2c8d7232caa2dfe45b5ef92149601d156564cc464461b0eef9c57b1fb3257706b26229076592e1fde963e653a1638c6ebfd00dc918e013a087c9c5057571b73ba4f26a07870203010001
Private key:
D:529573251737232625704288675615182775437090017539029617885081981396190058982771280781653207475934263147375034163792291065688084757868231483377395505629916470547756129949406289793688256990723259514657395588070376139564453610317059805889507284494338182455035536806487921005211396852639685180899416643590259715432045742925321683699401915422907440874173512687163902593631681946028889132357815308193587912842679270109714257106180666803414660706763973678154320703613300612406629584099655621318093029045415993900679763003331685542450983559579330175260214710805987572751263885943780942969988019064301352232364359006293747473
encoded:308204be020100300d06092a864886f70d0101010500048204a8308204a40201000282010100eb802a99eb94b9534f9535081687f74a328b90f81bc87b160bb1f4b4bf9ba7cbcc9c3857ff8425d4e6424fa09ec3d7d5860d175380919d9967ec66c6c2a9c0fe03906d1fdaaa93c83cc5487ffdf843e186330a2a1d459906e94cabe5e161a673ff1db5845b831e336dbe01b30a4bfb8b9697316f7bbffd752ec8900daa789e41144e6c462b0b3800ec0e3672c7364ce5cf7c1af689528e98146f4d53d1bc785909c964c05889ec75fad497b395a5cf31df4062cdc9c7d8ddc8449c2c8d7232caa2dfe45b5ef92149601d156564cc464461b0eef9c57b1fb3257706b26229076592e1fde963e653a1638c6ebfd00dc918e013a087c9c5057571b73ba4f26a07870203010001028201000431ed5e915305194c061f0c1af73c25eeeef91e07f37b62b617c50afc79d52fb664f957beea0c49a8c1581f25cf873f4e0334e897b766411709e21b06a05aca92b04f652d5e338221887af1a36649e214b1ebdfbf07b439579bb633396db3e66bfffdd532e1871b36f0b37bc08f6858f1bf790721e6f56198a681ee1ddf12700e25c83a72b49e53910419753666f9aa20165e5f5e955cd8e68d8daed286e738b30394bd07a4ac011c63c967a09e566a64421f24f735b8b8ead730bf7c8d392540f6a20b24a73d74c79424ea3dc17ed17b227e09a5400808dc53fc9161016aca6602d5cedbda746140487cfec5d4bdca1b563b05e73d121b688f6da2d07a671102818100f941294fa201afccaea0adc500752ed0ff6adc07da98cdcaffd871b9abd3d82dc275f4ebaa8453164cd826a7a77e77b48204a05ae3817207fc27205de7c7c4301f9effc100f00c191255d466dc70e0e9f074ebd1d3e02269a76ac9b10fcba45af29853a9f0500a94e2267f9e2ce24ad657056bc3caa19a79318ec35fb902561102818100f1dfb7cabaababb2292c29fd121e7d7e464deb6dfff2d2c0d38c72668cb12e62cdc38bd494705f03a197290acdec1a4c9ec7df40eb058d78dae4b18acc37d72286fb58692081b90c3a4b7b0753d8da0e1ac6d3bf74b7405af9dc2c2b8188173ede25f1e2247951201cae6979ed057e682b015e35b00e113cae0e5d3ebaf38c170281803dcf86eb1485ce8eb78f69083d80d1c74a4fb998c900b3a7efa241318606d6c9223c162c8af09d9a1e1c4c19af539163d60a47a9c2594b69e781dc68ed1d80ed5e2a13ca4ced3a52cd553382fe8f8f76f4064aa4922236e67479eae259c46a51936f6aefed842bdb97e96c2451851c81e2ba996ac849230182e4a056908e9fc102818100d2d4f579eb3954d2597d3ba472b4cd22d2d97ccc477c3c2504c1b9be9608a3ac503b91995d428e2fb61cf3138de7ae0cf7a2b581fadabe3488692c31164dde632451d700dbeaf7882710404f64d0f351b41977ddbd393709961e4b0a29409d3299a56db077a6a00663b9cc0b1185e6679a84f8bfc7949b85cf1a8a40f1e8f54502818100882ac6bf891b0b1f28d67b6775b21f11c1785c102541cf09d989fb9ce6ef7efd371ece5d2b29b182cc3a8f2c92c377474c8ae9c98981b8d312cb4356b7987823a056bab518130eed0afda5224057056d3517e3898b0482b5eea28a0234afe20341528d949ff4b20eb6425874582e649ed92f4905183542146579d009ef724555
Signature:6e5973ad826207efc61694dcb82e1d4e3a9a2874fac2339b8b4dc7ef094b0f191093f78852fc5c0fca0c617b0d7523243cf072280032f37c0dac6a88a30ba15bd68ffb209a132a02784909dec5d7ebdc034238664ad0c3edb5e624e4c3055861d04d4d412183c1fe54ead5985f5fcb65067f0ae1359731e0a4f3f940e57f0067fbeb82aa2e8d9c326fad6553e0002c78672135ba538ee63964132d998f544d22a5bfcdb90d8b5948a6e9c1c5aaa8023b89a65a1815d3b85b2eb6ae6b5d9305168f4d670dc2b34ebc735e37394d04f1dc62c29b19bf4e60421b01779e5091b127c66066955d4a91853de91e484e5de9ffba7086d60a16851a73c5247ee10ab9e9
..Rejected legacy signature:253e1d19bbe91064f2364c1e7db3ba8eb6dc5b19202e440eab6fbdf28c8c6ec05b812983713c338c72b6e99b8edf506a89ff9fc8e5c2c52362097a56dc228060eca01e1ff318c6c81617691438703411c1f953b21cd74331f87c9b8b189fdffdfe8550bd2bd1d47be915f8604a0f472199dd705e19b1b815f99b68d60bc257c7

Time: 114.467
There were 7 failures:
1) testByteBufferShiftedAlias(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: Overlapping buffers test failed with buffer type: direct buffers and output offset -1
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:583)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
Caused by: java.lang.RuntimeException: error:1e000067:Cipher functions:OPENSSL_internal:BUFFER_TOO_SMALL
	at org.conscrypt.NativeCrypto.EVP_AEAD_CTX_seal(Native Method)
	at org.conscrypt.OpenSSLCipher$EVP_AEAD.doFinalInternal(OpenSSLCipher.java:1213)
	at org.conscrypt.OpenSSLCipher.engineDoFinal(OpenSSLCipher.java:389)
	at javax.crypto.CipherSpi.bufferCrypt(CipherSpi.java:830)
	at javax.crypto.CipherSpi.engineDoFinal(CipherSpi.java:730)
	at javax.crypto.Cipher.doFinal(Cipher.java:2460)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:562)
	... 32 more
2) testByteBufferSize(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: ciphertext size:32 expected:<16> but was:<32>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferSize(AesGcmTest.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
3) testEmptyPlaintext(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testEmptyPlaintext(CipherInputStreamTest.java:261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
4) testCorruptAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testCorruptAesGcm(CipherInputStreamTest.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
5) testAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testAesGcm(CipherInputStreamTest.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
6) testEmptyPlaintext(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testEmptyPlaintext(CipherOutputStreamTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
7) testAesGcm(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testAesGcm(CipherOutputStreamTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)

FAILURES!!!
Tests run: 69,  Failures: 7


BazelTestRunner exiting with a return value of 1
JVM shutdown hooks (if any) will run now.
The JVM will exit once they complete.

-- JVM shutdown starting at 2018-04-05 22:36:02 --


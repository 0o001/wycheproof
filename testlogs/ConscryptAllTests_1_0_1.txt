exec ${PAGER:-/usr/bin/less} "$0" || exit 1
-----------------------------------------------------------------------------
JUnit4 Test Runner
.testDefaultTagSizeAlgorithmParameterGenerator:java.security.NoSuchAlgorithmException: GCM AlgorithmParameterGenerator not available
......E......E.....
Provider:Conscrypt
AlgorithmParameters.AES
AlgorithmParameters.ChaCha20
AlgorithmParameters.DESEDE
AlgorithmParameters.EC
AlgorithmParameters.GCM
AlgorithmParameters.OAEP
CertificateFactory.X509
Cipher.AES/CBC/NoPadding
Cipher.AES/CBC/NoPadding SupportedKeyFormats
Cipher.AES/CBC/PKCS5Padding
Cipher.AES/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES/CTR/NoPadding
Cipher.AES/CTR/NoPadding SupportedKeyFormats
Cipher.AES/ECB/NoPadding
Cipher.AES/ECB/NoPadding SupportedKeyFormats
Cipher.AES/ECB/PKCS5Padding
Cipher.AES/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES/GCM/NoPadding
Cipher.AES/GCM/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/NoPadding
Cipher.AES_128/CBC/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/PKCS5Padding
Cipher.AES_128/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/ECB/NoPadding
Cipher.AES_128/ECB/NoPadding SupportedKeyFormats
Cipher.AES_128/ECB/PKCS5Padding
Cipher.AES_128/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/GCM/NoPadding
Cipher.AES_128/GCM/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/NoPadding
Cipher.AES_256/CBC/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/PKCS5Padding
Cipher.AES_256/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/ECB/NoPadding
Cipher.AES_256/ECB/NoPadding SupportedKeyFormats
Cipher.AES_256/ECB/PKCS5Padding
Cipher.AES_256/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/GCM/NoPadding
Cipher.AES_256/GCM/NoPadding SupportedKeyFormats
Cipher.ARC4
Cipher.ARC4 SupportedKeyFormats
Cipher.ChaCha20
Cipher.ChaCha20 SupportedKeyFormats
Cipher.ChaCha20/Poly1305/NoPadding
Cipher.ChaCha20/Poly1305/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/NoPadding
Cipher.DESEDE/CBC/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/PKCS5Padding
Cipher.DESEDE/CBC/PKCS5Padding SupportedKeyFormats
Cipher.RSA/ECB/NoPadding
Cipher.RSA/ECB/NoPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPPadding
Cipher.RSA/ECB/OAEPPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/PKCS1Padding
Cipher.RSA/ECB/PKCS1Padding SupportedKeyClasses
KeyAgreement.ECDH
KeyAgreement.ECDH SupportedKeyClasses
KeyAgreement.ECDH SupportedKeyFormats
KeyFactory.EC
KeyFactory.RSA
KeyGenerator.AES
KeyGenerator.ChaCha20
KeyGenerator.DESEDE
KeyGenerator.HmacMD5
KeyGenerator.HmacSHA1
KeyGenerator.HmacSHA224
KeyGenerator.HmacSHA256
KeyGenerator.HmacSHA384
KeyGenerator.HmacSHA512
KeyPairGenerator.EC
KeyPairGenerator.RSA
Mac.HmacMD5
Mac.HmacMD5 SupportedKeyClasses
Mac.HmacMD5 SupportedKeyFormats
Mac.HmacSHA1
Mac.HmacSHA1 SupportedKeyClasses
Mac.HmacSHA1 SupportedKeyFormats
Mac.HmacSHA224
Mac.HmacSHA224 SupportedKeyClasses
Mac.HmacSHA224 SupportedKeyFormats
Mac.HmacSHA256
Mac.HmacSHA256 SupportedKeyClasses
Mac.HmacSHA256 SupportedKeyFormats
Mac.HmacSHA384
Mac.HmacSHA384 SupportedKeyClasses
Mac.HmacSHA384 SupportedKeyFormats
Mac.HmacSHA512
Mac.HmacSHA512 SupportedKeyClasses
Mac.HmacSHA512 SupportedKeyFormats
MessageDigest.MD5
MessageDigest.SHA-1
MessageDigest.SHA-224
MessageDigest.SHA-256
MessageDigest.SHA-384
MessageDigest.SHA-512
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SSLContext.Default
SSLContext.SSL
SSLContext.TLS
SSLContext.TLSv1
SSLContext.TLSv1.1
SSLContext.TLSv1.2
SecretKeyFactory.DESEDE
SecureRandom.SHA1PRNG
SecureRandom.SHA1PRNG ImplementedIn
Signature.MD5WithRSA
Signature.MD5WithRSA SupportedKeyClasses
Signature.MD5WithRSA SupportedKeyFormats
Signature.NONEwithECDSA
Signature.NONEwithECDSA SupportedKeyClasses
Signature.NONEwithECDSA SupportedKeyFormats
Signature.NONEwithRSA
Signature.NONEwithRSA SupportedKeyClasses
Signature.SHA1WithRSA
Signature.SHA1WithRSA SupportedKeyClasses
Signature.SHA1WithRSA SupportedKeyFormats
Signature.SHA1withECDSA
Signature.SHA1withECDSA SupportedKeyClasses
Signature.SHA1withECDSA SupportedKeyFormats
Signature.SHA1withRSA/PSS
Signature.SHA1withRSA/PSS SupportedKeyClasses
Signature.SHA1withRSA/PSS SupportedKeyFormats
Signature.SHA224WithRSA
Signature.SHA224WithRSA SupportedKeyClasses
Signature.SHA224WithRSA SupportedKeyFormats
Signature.SHA224withECDSA
Signature.SHA224withECDSA SupportedKeyClasses
Signature.SHA224withECDSA SupportedKeyFormats
Signature.SHA224withRSA/PSS
Signature.SHA224withRSA/PSS SupportedKeyClasses
Signature.SHA224withRSA/PSS SupportedKeyFormats
Signature.SHA256WithRSA
Signature.SHA256WithRSA SupportedKeyClasses
Signature.SHA256WithRSA SupportedKeyFormats
Signature.SHA256withECDSA
Signature.SHA256withECDSA SupportedKeyClasses
Signature.SHA256withECDSA SupportedKeyFormats
Signature.SHA256withRSA/PSS
Signature.SHA256withRSA/PSS SupportedKeyClasses
Signature.SHA256withRSA/PSS SupportedKeyFormats
Signature.SHA384WithRSA
Signature.SHA384WithRSA SupportedKeyClasses
Signature.SHA384WithRSA SupportedKeyFormats
Signature.SHA384withECDSA
Signature.SHA384withECDSA SupportedKeyClasses
Signature.SHA384withECDSA SupportedKeyFormats
Signature.SHA384withRSA/PSS
Signature.SHA384withRSA/PSS SupportedKeyClasses
Signature.SHA384withRSA/PSS SupportedKeyFormats
Signature.SHA512WithRSA
Signature.SHA512WithRSA SupportedKeyClasses
Signature.SHA512WithRSA SupportedKeyFormats
Signature.SHA512withECDSA
Signature.SHA512withECDSA SupportedKeyClasses
Signature.SHA512withECDSA SupportedKeyFormats
Signature.SHA512withRSA/PSS
Signature.SHA512withRSA/PSS SupportedKeyClasses
Signature.SHA512withRSA/PSS SupportedKeyFormats
.E.E.Skipping testAesEax
.E.E.Skipping testAesEax
.E..java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
..Encoded ECPrivateKey:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b0201010420485cf33db9398288cfb3325f8ff205903186c0f24e76d399ef0f73b89de80d67a14403420004ebb0c6c638880686ac466061d94258e49260bfc1664c6613ff904dc3583a6ea1f732ab007d17d89c4834316a612840113e68f8a2226d6484a28908df5ac43359
...testWrongOrder: ECDHC not supported
testWrongOrder: ECDHC not supported
..testModifiedPublic:public point not on curve throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:public point = (0,0) throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 26959946660873538060741835960514744168612397095220107664918121663170 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = 2 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = None throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:modified prime throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:06000066:public key routines:OPENSSL_internal:DECODE_ERROR
testModifiedPublic:a = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = -1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testWrongOrder: ECDHC not supported
.Generated shared secret with a modified order:ECDH
expected:4f40fc32ad17a270c0114bcd7be21f27e34ff7c95daf44418a8558675a6233e1 computed:4f40fc32ad17a270c0114bcd7be21f27e34ff7c95daf44418a8558675a6233e1
testWrongOrder: can't modify order.
..testModifiedPublic:public point not on curve throws java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0f000078:elliptic curve routines:OPENSSL_internal:POINT_IS_NOT_ON_CURVE
testModifiedPublic:public point = (0,0) throws java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0f000078:elliptic curve routines:OPENSSL_internal:POINT_IS_NOT_ON_CURVE
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: java.security.InvalidAlgorithmParameterException: EC_GROUP_new_arbitrary failed
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: java.security.InvalidAlgorithmParameterException: EC_GROUP_new_arbitrary failed
modified prime throws java.lang.IllegalArgumentException: first coefficient is too large
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
testModifiedPublic:a = 0 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.lang.IllegalArgumentException: n is not positive
order = 0 throws java.lang.IllegalArgumentException: n is not positive
cofactor = -1 throws java.lang.IllegalArgumentException: h is not positive
cofactor = 0 throws java.lang.IllegalArgumentException: h is not positive
testWrongOrder: ECDHC not supported
.....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Curve:secp256r1
Order:115792089210356248762697446949407573529996955224135760342422259061068512044369
Private key:
S:11218553821959772209868071551392264505308442844378585485404574964544623646988
encoded:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b020101042018cd79f861df1c835d017d80ffe7dd2dfa043395f7067a26915290da68ac990ca144034200045b303982f5170d759595e496954c2f7b288160e01610afeeb2dc041546c8f1066983ded58a3ed4840ffd25d08c18fc4b7da77b622ac4527b8b273f157e2e7be7
Public key:
X:41245674810332432319795966287140084781843665102762030792125851235927353520390
Y:47725844011445509805355763671072397091315284519244497264545194958796652182503
encoded:3059301306072a8648ce3d020106082a8648ce3d030107034200045b303982f5170d759595e496954c2f7b288160e01610afeeb2dc041546c8f1066983ded58a3ed4840ffd25d08c18fc4b7da77b622ac4527b8b273f157e2e7be7
Signature:3045022100fabfbf165cdadce8120f07762b4727e4e772157fccc98e992bf16628fda9f712022024be48bd014698e910af7cbf70c6c5abd03bb6d8aad1c2eed50c9c4c8460b616
r:113416998771639097990260330106363308580048012880512871203489804684267484739346
s:16619465512606726355102349992668473395751188823319199685511978765200841029142
.Conscrypt curve:secp256r1 countLsb:497 countMsb:506
Conscrypt curve:secp224r1 countLsb:506 countMsb:540
Conscrypt curve:secp384r1 countLsb:480 countMsb:497
Conscrypt curve:secp521r1 countLsb:506 countMsb:511
Conscrypt curve:brainpoolP256r1 countLsb:538 countMsb:518
..testTiming algorithm:SHA256WithECDSA
count:50000 cutoff:906432 relative average:1.0037454484845443 sigmas:1.4506059604718131
count:25020 cutoff:43389 relative average:0.9985826439448046 sigmas:0.3883141742599413
count:12527 cutoff:43120 relative average:1.0053799446807024 sigmas:1.0429463682109181
count:6268 cutoff:42929 relative average:1.0079703237549325 sigmas:1.0929519872811195
count:3130 cutoff:42762 relative average:0.9984362066260679 sigmas:0.15153472485394742
count:1573 cutoff:42655 relative average:1.005988865090826 sigmas:0.41140495555374496
count:788 cutoff:42589 relative average:1.034887440906563 sigmas:1.6962616755775308
count:404 cutoff:42537 relative average:1.0425898399770388 sigmas:1.4827137608975502
count:196 cutoff:42491 relative average:1.0307285548738931 sigmas:0.7451278559865177
count:99 cutoff:42450 relative average:1.0162929335730406 sigmas:0.2807873328186451
count:52 cutoff:42423 relative average:1.0087924171079308 sigmas:0.10981725448022167
count:25 cutoff:42401 relative average:1.0514954394342413 sigmas:0.445963587290959
count:14 cutoff:42380 relative average:1.0654929519936946 sigmas:0.42444283944440964
..................testDefaultSize: keysize=2048
....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Public key:
Modulus:19485782324459151665936512463643441340814358912272048514824082321976525830328754468877152818783514198111968246226894308466873353463015566754375130569007999259096330633056389401396792402442331742395534076429724820300742934559046067754232229474250534557842417693503898918925469933043261211267300673450371514226485039835243290637340083672232912763490612560178818190953244257635855518295634491737195450920733784478265473915962767988095318454499639606889856780895248376793362269408107346795484564958690656317148823310627421432525126767427030274079918593983669567827707214777964522555311542127992671041931882561697919473201
E:65537
encoded:30820122300d06092a864886f70d01010105000382010f003082010a02820101009a5b6cce61e640bfec87ada633d391e7fd8d3a36eb19f0f7e124abb2927e1749f8239faceafccf306c4f6ce1d03229cd00a7057fd13b95a27544024ee4814eaac5d06539f3847fac6d42212735cfdd577f77f7f81d5c9af34db7d400717106fb5f90f01d8e97c928da905474484eeb9c2fda7795206724e0326a6eaa7b0ce9ba029f435a242a5f49409039e95a09f66967161e88620b945c8b942d03ea1b7f2a48e99413c90d3edba01c85d62a912ebd1e6c4d40fc8fc98ad09cf84916d9f5208f457fbaedbd3fa4dccf141d663bdcb7990209c17671285a36d614834697429856fbc9b0aea04108e79451f432846120b6628820b8e26bf38558c268582716310203010001
Private key:
D:465594283788402910660943416876232493835996235087060431925092702857887176183323586688300168440093140517894089476510698683149094077528740999660557992981596888539763180047539259465960184872363876574304014027974573743599494345362019005200237908179687994383074724139539834858131217652022185739006976620963579412727027578411554513323546588616570193424656462567922819441452155207315208664937800048393569268566736175423149943345510687087951354654712657147740703476846122267155871774911109741929216276325941823357002285534585923195232005883912930365060189400932366563640994026392231599484442155360342517856029613339531713577
encoded:308204be020100300d06092a864886f70d0101010500048204a8308204a402010002820101009a5b6cce61e640bfec87ada633d391e7fd8d3a36eb19f0f7e124abb2927e1749f8239faceafccf306c4f6ce1d03229cd00a7057fd13b95a27544024ee4814eaac5d06539f3847fac6d42212735cfdd577f77f7f81d5c9af34db7d400717106fb5f90f01d8e97c928da905474484eeb9c2fda7795206724e0326a6eaa7b0ce9ba029f435a242a5f49409039e95a09f66967161e88620b945c8b942d03ea1b7f2a48e99413c90d3edba01c85d62a912ebd1e6c4d40fc8fc98ad09cf84916d9f5208f457fbaedbd3fa4dccf141d663bdcb7990209c17671285a36d614834697429856fbc9b0aea04108e79451f432846120b6628820b8e26bf38558c2685827163102030100010282010003b02f001a52db2ea90876e83e231c87ab9aafc793994f238521f3cac2ce8d44045e7434ff951482f4db92fc10c0bda665d83443ef4fc4e32707d3252ee2053276313a474dee01f3309ceaf46f481ed4c3e41f9087c1bdc332684202295e6c6790042df427bc069fa0c71915818bb0c36b20a1f3a0c04d49fd0183b4341f0c4180a5b02b4275947301d15a7187eecd521c01082c0ad1b6f3becbf8b6e7dffcda1139aa6ebb7f30926c9e2b579904ad9ba2a3cbde95b55d5ac5944ef52fc5332b2d95489f9149c09d70019f44d7816558c89f9167ec62df54dce1dd36b08e5798927fb317bdada8bee68381ad9e4c06aca00b00bd4e58cfb2e35741734ce69c2902818100d67e6cc0e859effe6396e051469e91a60765444368f5187794d7b78bff504954a05fd616c38a3eb25c3889e2ed160ca9e99958a4681785e569547f0a2c1ba5df53fbdcb33cd7f37a033363e6218f90337d1c8d5173b71437c95afb2c4f4878cc5cff0f3dbb7e587bed3681b207f844490b78b244e2c0dbababdc17f1653aaa1502818100b839f40f891c9f426d7555740c7fb93955b6b0e0f866a752ac251a26170f47d83e4647efb7f410129e9699ed7eeb26874f1c2a65cf857c98b0a9cadbf7266b74f32c11593ed7f668d0f3bff16d3b4b8876d7b41f3689b2d10b1eae5560c3dc386bb0322036442924847c51060e1fa85ff4b8c120c892030e614759e577a10ead02818100c6e106397fb7147d8d1db1f3ea44d0cb5f04185d608e11179f9cbc85443fcf1e766d25f6896c3f61e57c4eed67e30feee3b7d9a6e7151883743c72669e2b2c8b7c358597738cd0268b9d34bd86d4b461e95975f6d61224deed063cea02c131b05b71eb51d3ecfc623bba545b1c64a7fc0a74e8e652517bdd1b46c1b483a5f75902818060f53f5a1dd38e8e2b85a15fde642a5bde9cb422f31933def2f2e3fc400eaec544a140a30db1c9f3c2bb886fd2687872a654308c3cd80867643338ace43ab83b68f03c8137edf9a5d8b330c623b31d61c90a65a637d1e8e6d46f65595200431afeb250ef5b202c7727b3360175d57b8c650407c0f54ec38501f5c77e59a3ce5102818100b77a116edf006ed7c231526c15e68e3f02f8a2405e574b8701594b4685419e5959e4b201804fabc577f4b10350d0a7ba74cb7842a55dbc1019bf330bace103513d2c46106b809c553306aacd6472240b366cde26afae03c2771c87eec8a2bf002d816bd2f8745cca097a41776a687d0068a94917a48220a502a357c5904c2c00
Signature:7fd8e4d74915ac24c25c67bc0c5bd0662c536a725cb7362110802f76da7069695f9e1d365c7d75486fd5d6fb91ede90501b58b84b7d0b29fc3c4c678aca8148c0412c75fc884c0c6e6dba41c721fa336899f294dd90d098632e9cd6329a215977f746c43fc4efa33dda796f78f80f97203c013564f9606cef6203d2e54fac9dbe9fb72aca111347733a000381b2db5447bdfda42946b534ceeff0d1dfe3182b10af44b3f3a68f490eefd9626e0773c41d19c1e44f0348052c060527bf3cf6032b1a9396c63aa3564fb9f30a6fbfd3437125c01a20ad7b0a14595fdf4a68795d0110229c63617b7f9999c09b5f1b0688697de6e9f1e5825055bf6f0a06d906b72
..Rejected legacy signature:253e1d19bbe91064f2364c1e7db3ba8eb6dc5b19202e440eab6fbdf28c8c6ec05b812983713c338c72b6e99b8edf506a89ff9fc8e5c2c52362097a56dc228060eca01e1ff318c6c81617691438703411c1f953b21cd74331f87c9b8b189fdffdfe8550bd2bd1d47be915f8604a0f472199dd705e19b1b815f99b68d60bc257c7

Time: 114.878
There were 7 failures:
1) testByteBufferShiftedAlias(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: Overlapping buffers test failed with buffer type: direct buffers and output offset -1
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:583)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
Caused by: java.lang.RuntimeException: error:1e000067:Cipher functions:OPENSSL_internal:BUFFER_TOO_SMALL
	at org.conscrypt.NativeCrypto.EVP_AEAD_CTX_seal(Native Method)
	at org.conscrypt.OpenSSLCipher$EVP_AEAD.doFinalInternal(OpenSSLCipher.java:1213)
	at org.conscrypt.OpenSSLCipher.engineDoFinal(OpenSSLCipher.java:389)
	at javax.crypto.CipherSpi.bufferCrypt(CipherSpi.java:830)
	at javax.crypto.CipherSpi.engineDoFinal(CipherSpi.java:730)
	at javax.crypto.Cipher.doFinal(Cipher.java:2460)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:562)
	... 32 more
2) testByteBufferSize(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: ciphertext size:32 expected:<16> but was:<32>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferSize(AesGcmTest.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
3) testEmptyPlaintext(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testEmptyPlaintext(CipherInputStreamTest.java:261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
4) testCorruptAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testCorruptAesGcm(CipherInputStreamTest.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
5) testAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testAesGcm(CipherInputStreamTest.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
6) testEmptyPlaintext(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testEmptyPlaintext(CipherOutputStreamTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
7) testAesGcm(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testAesGcm(CipherOutputStreamTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)

FAILURES!!!
Tests run: 69,  Failures: 7


BazelTestRunner exiting with a return value of 1
JVM shutdown hooks (if any) will run now.
The JVM will exit once they complete.

-- JVM shutdown starting at 2018-04-06 00:46:26 --


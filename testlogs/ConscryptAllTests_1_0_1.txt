exec ${PAGER:-/usr/bin/less} "$0" || exit 1
-----------------------------------------------------------------------------
JUnit4 Test Runner
.testDefaultTagSizeAlgorithmParameterGenerator:java.security.NoSuchAlgorithmException: GCM AlgorithmParameterGenerator not available
......E......E.....
Provider:Conscrypt
AlgorithmParameters.AES
AlgorithmParameters.ChaCha20
AlgorithmParameters.DESEDE
AlgorithmParameters.EC
AlgorithmParameters.GCM
AlgorithmParameters.OAEP
CertificateFactory.X509
Cipher.AES/CBC/NoPadding
Cipher.AES/CBC/NoPadding SupportedKeyFormats
Cipher.AES/CBC/PKCS5Padding
Cipher.AES/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES/CTR/NoPadding
Cipher.AES/CTR/NoPadding SupportedKeyFormats
Cipher.AES/ECB/NoPadding
Cipher.AES/ECB/NoPadding SupportedKeyFormats
Cipher.AES/ECB/PKCS5Padding
Cipher.AES/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES/GCM/NoPadding
Cipher.AES/GCM/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/NoPadding
Cipher.AES_128/CBC/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/PKCS5Padding
Cipher.AES_128/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/ECB/NoPadding
Cipher.AES_128/ECB/NoPadding SupportedKeyFormats
Cipher.AES_128/ECB/PKCS5Padding
Cipher.AES_128/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/GCM/NoPadding
Cipher.AES_128/GCM/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/NoPadding
Cipher.AES_256/CBC/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/PKCS5Padding
Cipher.AES_256/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/ECB/NoPadding
Cipher.AES_256/ECB/NoPadding SupportedKeyFormats
Cipher.AES_256/ECB/PKCS5Padding
Cipher.AES_256/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/GCM/NoPadding
Cipher.AES_256/GCM/NoPadding SupportedKeyFormats
Cipher.ARC4
Cipher.ARC4 SupportedKeyFormats
Cipher.ChaCha20
Cipher.ChaCha20 SupportedKeyFormats
Cipher.ChaCha20/Poly1305/NoPadding
Cipher.ChaCha20/Poly1305/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/NoPadding
Cipher.DESEDE/CBC/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/PKCS5Padding
Cipher.DESEDE/CBC/PKCS5Padding SupportedKeyFormats
Cipher.RSA/ECB/NoPadding
Cipher.RSA/ECB/NoPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPPadding
Cipher.RSA/ECB/OAEPPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/PKCS1Padding
Cipher.RSA/ECB/PKCS1Padding SupportedKeyClasses
KeyAgreement.ECDH
KeyAgreement.ECDH SupportedKeyClasses
KeyAgreement.ECDH SupportedKeyFormats
KeyFactory.EC
KeyFactory.RSA
KeyGenerator.AES
KeyGenerator.ChaCha20
KeyGenerator.DESEDE
KeyGenerator.HmacMD5
KeyGenerator.HmacSHA1
KeyGenerator.HmacSHA224
KeyGenerator.HmacSHA256
KeyGenerator.HmacSHA384
KeyGenerator.HmacSHA512
KeyPairGenerator.EC
KeyPairGenerator.RSA
Mac.HmacMD5
Mac.HmacMD5 SupportedKeyClasses
Mac.HmacMD5 SupportedKeyFormats
Mac.HmacSHA1
Mac.HmacSHA1 SupportedKeyClasses
Mac.HmacSHA1 SupportedKeyFormats
Mac.HmacSHA224
Mac.HmacSHA224 SupportedKeyClasses
Mac.HmacSHA224 SupportedKeyFormats
Mac.HmacSHA256
Mac.HmacSHA256 SupportedKeyClasses
Mac.HmacSHA256 SupportedKeyFormats
Mac.HmacSHA384
Mac.HmacSHA384 SupportedKeyClasses
Mac.HmacSHA384 SupportedKeyFormats
Mac.HmacSHA512
Mac.HmacSHA512 SupportedKeyClasses
Mac.HmacSHA512 SupportedKeyFormats
MessageDigest.MD5
MessageDigest.SHA-1
MessageDigest.SHA-224
MessageDigest.SHA-256
MessageDigest.SHA-384
MessageDigest.SHA-512
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SSLContext.Default
SSLContext.SSL
SSLContext.TLS
SSLContext.TLSv1
SSLContext.TLSv1.1
SSLContext.TLSv1.2
SecretKeyFactory.DESEDE
SecureRandom.SHA1PRNG
SecureRandom.SHA1PRNG ImplementedIn
Signature.MD5WithRSA
Signature.MD5WithRSA SupportedKeyClasses
Signature.MD5WithRSA SupportedKeyFormats
Signature.NONEwithECDSA
Signature.NONEwithECDSA SupportedKeyClasses
Signature.NONEwithECDSA SupportedKeyFormats
Signature.NONEwithRSA
Signature.NONEwithRSA SupportedKeyClasses
Signature.SHA1WithRSA
Signature.SHA1WithRSA SupportedKeyClasses
Signature.SHA1WithRSA SupportedKeyFormats
Signature.SHA1withECDSA
Signature.SHA1withECDSA SupportedKeyClasses
Signature.SHA1withECDSA SupportedKeyFormats
Signature.SHA1withRSA/PSS
Signature.SHA1withRSA/PSS SupportedKeyClasses
Signature.SHA1withRSA/PSS SupportedKeyFormats
Signature.SHA224WithRSA
Signature.SHA224WithRSA SupportedKeyClasses
Signature.SHA224WithRSA SupportedKeyFormats
Signature.SHA224withECDSA
Signature.SHA224withECDSA SupportedKeyClasses
Signature.SHA224withECDSA SupportedKeyFormats
Signature.SHA224withRSA/PSS
Signature.SHA224withRSA/PSS SupportedKeyClasses
Signature.SHA224withRSA/PSS SupportedKeyFormats
Signature.SHA256WithRSA
Signature.SHA256WithRSA SupportedKeyClasses
Signature.SHA256WithRSA SupportedKeyFormats
Signature.SHA256withECDSA
Signature.SHA256withECDSA SupportedKeyClasses
Signature.SHA256withECDSA SupportedKeyFormats
Signature.SHA256withRSA/PSS
Signature.SHA256withRSA/PSS SupportedKeyClasses
Signature.SHA256withRSA/PSS SupportedKeyFormats
Signature.SHA384WithRSA
Signature.SHA384WithRSA SupportedKeyClasses
Signature.SHA384WithRSA SupportedKeyFormats
Signature.SHA384withECDSA
Signature.SHA384withECDSA SupportedKeyClasses
Signature.SHA384withECDSA SupportedKeyFormats
Signature.SHA384withRSA/PSS
Signature.SHA384withRSA/PSS SupportedKeyClasses
Signature.SHA384withRSA/PSS SupportedKeyFormats
Signature.SHA512WithRSA
Signature.SHA512WithRSA SupportedKeyClasses
Signature.SHA512WithRSA SupportedKeyFormats
Signature.SHA512withECDSA
Signature.SHA512withECDSA SupportedKeyClasses
Signature.SHA512withECDSA SupportedKeyFormats
Signature.SHA512withRSA/PSS
Signature.SHA512withRSA/PSS SupportedKeyClasses
Signature.SHA512withRSA/PSS SupportedKeyFormats
.E.E.Skipping testAesEax
.E.E.Skipping testAesEax
.E..java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
..Encoded ECPrivateKey:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b02010104203856b82ca6b04d05655681eddd442f007a32ca7b699ee0ea38ea922dd90fe630a14403420004b09016db20433810cd1e5ac9cc3d70137d7a3b7db5f303a94ccc52874ab98e09962d160223fe61b14c9ceefde5e9005f15f810b8d433dcf7822c3a739bab9012
...testWrongOrder: ECDHC not supported
testWrongOrder: ECDHC not supported
..testModifiedPublic:public point not on curve throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:public point = (0,0) throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 26959946660873538060741835960514744168612397095220107664918121663170 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = 2 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = None throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:modified prime throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:06000066:public key routines:OPENSSL_internal:DECODE_ERROR
testModifiedPublic:a = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = -1 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:cofactor = 0 throws java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testWrongOrder: ECDHC not supported
.Generated shared secret with a modified order:ECDH
expected:6344d58e0a021c62268f79679168926978c235662fe0bdcc291a32397a5dc017 computed:6344d58e0a021c62268f79679168926978c235662fe0bdcc291a32397a5dc017
testWrongOrder: can't modify order.
..testModifiedPublic:public point not on curve throws java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0f000078:elliptic curve routines:OPENSSL_internal:POINT_IS_NOT_ON_CURVE
testModifiedPublic:public point = (0,0) throws java.security.spec.InvalidKeySpecException: java.lang.RuntimeException: error:0f000078:elliptic curve routines:OPENSSL_internal:POINT_IS_NOT_ON_CURVE
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: java.security.InvalidAlgorithmParameterException: EC_GROUP_new_arbitrary failed
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: java.security.InvalidAlgorithmParameterException: EC_GROUP_new_arbitrary failed
modified prime throws java.lang.IllegalArgumentException: first coefficient is too large
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
testModifiedPublic:a = 0 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.InvalidKeyException: error:0f00006a:elliptic curve routines:OPENSSL_internal:INCOMPATIBLE_OBJECTS
order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.lang.IllegalArgumentException: n is not positive
order = 0 throws java.lang.IllegalArgumentException: n is not positive
cofactor = -1 throws java.lang.IllegalArgumentException: h is not positive
cofactor = 0 throws java.lang.IllegalArgumentException: h is not positive
testWrongOrder: ECDHC not supported
.....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Curve:secp256r1
Order:115792089210356248762697446949407573529996955224135760342422259061068512044369
Private key:
S:89720562181294101520651257999460888998593503802748139954090163400192296310741
encoded:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b0201010420c65c09e2dc21f78c2db8903e5991a82c4655436049bad25b54218cb3367557d5a14403420004eb9c883f35a8a83c116eb2dc48bc1aac45d33e41376489fea671d3cbb2791d330fd93838812c3da9b04aa725d4e5b43a164abb8731384ed4804eaf209e8b07f9
Public key:
X:106570087900803765762797573041567581472924562701401636271902016431568184745267
Y:7168486562961824120875324009809976312528992253531814673054115248475160119289
encoded:3059301306072a8648ce3d020106082a8648ce3d03010703420004eb9c883f35a8a83c116eb2dc48bc1aac45d33e41376489fea671d3cbb2791d330fd93838812c3da9b04aa725d4e5b43a164abb8731384ed4804eaf209e8b07f9
Signature:304402204ec68f0187ef4ea3a3098b6edab02289e5f5085565906de87d14d8d721824837022048d6007f6055a8c307e280854180a6bb984222be2b5dec980d45ab395d6c95f6
r:35631224899324040749036880266653071438333327921970154108058249803102416947255
s:32944633803916199099385592669059371924245489499825510112852323325738140603894
.Conscrypt curve:secp256r1 countLsb:484 countMsb:520
Conscrypt curve:secp224r1 countLsb:536 countMsb:487
Conscrypt curve:secp384r1 countLsb:534 countMsb:505
Conscrypt curve:secp521r1 countLsb:527 countMsb:517
Conscrypt curve:brainpoolP256r1 countLsb:512 countMsb:513
..testTiming algorithm:SHA256WithECDSA
count:50000 cutoff:2822821 relative average:0.9985236512846162 sigmas:0.5717873987876319
count:25004 cutoff:39312 relative average:0.9947447430416232 sigmas:1.4393265231006407
count:12532 cutoff:39117 relative average:0.9941118607971559 sigmas:1.1416918193176135
count:6272 cutoff:39014 relative average:0.9988214786584396 sigmas:0.16165945251697325
count:3152 cutoff:38949 relative average:0.9964692832223878 sigmas:0.34333384172386167
count:1574 cutoff:38899 relative average:0.9925435820779952 sigmas:0.5123812548978568
count:782 cutoff:38858 relative average:1.0010572721377424 sigmas:0.051209530164176884
count:401 cutoff:38823 relative average:1.0271569147296322 sigmas:0.9419183166346842
count:198 cutoff:38792 relative average:0.9640827869960449 sigmas:0.8753784534948642
count:99 cutoff:38763 relative average:0.9420849885871073 sigmas:0.99808923370898
count:50 cutoff:38738 relative average:0.9785410158596474 sigmas:0.262817807711703
count:27 cutoff:38717 relative average:0.8978613014062599 sigmas:0.9192482873436617
count:13 cutoff:38702 relative average:0.8630017146650116 sigmas:0.8555540177010151
..................testDefaultSize: keysize=2048
....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Public key:
Modulus:19918933269856616758119080815057064506958561673106630980700644635409118801428809578538537622806171396792823060278136716256062969608645116640847991522192968200312843107467897696072820740242070542050703005085408482724752495566411660250575535185090048154130045879456051356117751599589351275726483881139285666798298027706181899380778805777578710475876755146592463796453269675491514153841500394266616143286877857688467568115536340347160281503654780932913146611755467155586554388522111312957512995139679533517842664769214276178566236636940365185562453089275831517505500873376492099165561891078240729482734670823823737360851
E:65537
encoded:30820122300d06092a864886f70d01010105000382010f003082010a02820101009dc9d1017a84dcad3b845c42b58da1279edb1e4e86fb9d32d6e9b6dd26114b31c471385b2ad2cf56b2ea65ad0df24dd3bb5ac98cfb13609663fe49181a00a4d4558c0d343e06eb15b0c204bfe3659e4bd351bd89aec6e4a7065f7eb784001b6c5793af46fc7d39404cf38b5de6dec5a9417492a43862df44f6c308d4132aac142bf0a8a24398a3a46e841fbe61ecc3de492fe792b65f92036f641c6e22075c0d962d347d4be27a31e60d9f418c23f5b1ac70f94ba280b4b246a2c217f11ede53a686fb641aa437ba5a1983973d540bde51d9c6c8dff990331831098c28192fe81f47ec699e817b4216accd13f88d44f2866bd421c2450efc50c165e43bb411d30203010001
Private key:
D:4992878470033257118787878604289941974580187861589013540983869260847815724101984670513478291631420123301556385289517233109487380155423923182591976757111631370228103668888244646569666947073052074851426272426881728641238866913609526660761548503182427728641398426610377094658351227585242963242089414489763267945197408373761264481028483750205048111727612829425413142288776398442484326897198271688226362537806617834801819823685661597651950080687459030629999900402487221779111483491742068997236259287773876769095740388758131164016400076703248788590423666166080773049119227779847336609260116518884041722889703452923238456913
encoded:308204bd020100300d06092a864886f70d0101010500048204a7308204a302010002820101009dc9d1017a84dcad3b845c42b58da1279edb1e4e86fb9d32d6e9b6dd26114b31c471385b2ad2cf56b2ea65ad0df24dd3bb5ac98cfb13609663fe49181a00a4d4558c0d343e06eb15b0c204bfe3659e4bd351bd89aec6e4a7065f7eb784001b6c5793af46fc7d39404cf38b5de6dec5a9417492a43862df44f6c308d4132aac142bf0a8a24398a3a46e841fbe61ecc3de492fe792b65f92036f641c6e22075c0d962d347d4be27a31e60d9f418c23f5b1ac70f94ba280b4b246a2c217f11ede53a686fb641aa437ba5a1983973d540bde51d9c6c8dff990331831098c28192fe81f47ec699e817b4216accd13f88d44f2866bd421c2450efc50c165e43bb411d3020301000102820100278d1c7e45e342db8b75289932200fbaba378b97bc7f1a8ed14f211ebaf98fc3284e0705d72ca37b447abbc4ce9fa38184cf8380fab88737fb5594a5dd72b6de60992c0021e223103b4fced7f89c92bac7fc0fca10ccdb28c0d0b4173517bfc7ff05ce64394afc4c515da4dc035068f47dab464cb2b399ea93fe1c5ae879044bdf545f42136cb4f3decefeb12ba060a53efbe4c3529e18aef73c00bb6559e5aa5387ee0fbcfc6a39b98b723d0f7ffe29aee731033686682f02aface35ebd09afbe67b922920cc4cbac615ac6334608cc8d007fb8421b2de29d6195cf02cbdf7665cc87c3bb2b45958f593d54e08c927a7b85cebf0d5a628b91e7f848785a9e5102818100cdd8497910f2657fc08fa9028d1f8877180becde8010768be5cf32043930f718d45db18b111c751590db4b0372f6d872ede4d07901234724380db1ed5cca6f9b20cb3e425d2f38471ef197f6349829d21d461c272af8d3e99c2bfdb89c83aa5fd229df7693aebc59360ce8ea3d4eaa452b5800d4d2ec63d020d764bf2e7f094302818100c43bf89d1b2317c672f51a4bff89fe046bc19498bf74370a8bfd6787468b87c632abc6dd64bee11e3cd236705414dd13a7924700800999b262695795dae8d428734a68006d5c1500d0387dbf7fd5fe02dbb9dbc944cf3df62b94eb47487f95686dbc2b396b4130d41f004beabe88924ad609178520c1566ff60b2dd6e9c4c43102818057281e2bf1be00b5efeda40d1d7ddd85379c4d0604c973b8566cbd6bc65f72308432cbaaeb6ad634746a35bfd71ca7973a1d291c231c31d2271dbd5998716a820f879eebf092becc7650ab1c2736ca7659c8c6c0dad412be164f1615e5c7660b3e6c565ed9b721aed050f509c13d9ea0bcf27d1f9fd3518bdd6bf60f70fb7f0b02818100bb0e8fc6f2ff58c28b02a9b69838ea333ca4a309983727e09de148b6e2c04f04d7787770c380510789e2b8920b1478492c0b7c3335d9f0f0e26e9856f8fdc87f66a71ecc8972a572c9099094e33f118b97f86b52488d64fb2c4020a72aacb3b7802346f0cd14af7f04ae3bafe1403e73a7e3b2cfec915fdc0a264de3f7a2e1810281807e133dc68c21fa90028b7064cd42545a7264fec77542433d9466e7415c4a4379a74814f2baad310ea57a754556547a72ded3a9e031d279483e5d0704da420f045c60517330ed7e5d223c72a86d681124926608c0dcb314b6f404a9ba3d4deeacc6ce75bf95eb917da78ae0591902224748f80a559b84853b5d27180902d72e10
Signature:13567b6ad5eabc604255691e5700619507cbe487bbf740c2e7ff4a9e4e54289483e0f63364bbb9b5b21d0905c131114bf117356b57b1fb8b47b08174cac0787c70fa8ecb850b906ba8c81f32f7bd0862711f241448235ca3f40dfd1336ad3da9cb3d206e22747473a7aba312a82daeee5c357608e2b2b369cced8ad0a28a1fad60f287d9cd03c834d45ad37f1816dd4fcbc4bb0d1b90bd5c8f7f5705ebe4497309afe1d118c5fc1a2577cf8482471d3a155b87f2e44bfabf356a0cd3a6b2f80e301f08bd8f1629d951adab71eace11a1857be75260b5940f65b2977720a8869c55b9163197eaf092c13388ec98a3edbbe8b9950e336b58ad4ce934ee493ff8be
..Rejected legacy signature:253e1d19bbe91064f2364c1e7db3ba8eb6dc5b19202e440eab6fbdf28c8c6ec05b812983713c338c72b6e99b8edf506a89ff9fc8e5c2c52362097a56dc228060eca01e1ff318c6c81617691438703411c1f953b21cd74331f87c9b8b189fdffdfe8550bd2bd1d47be915f8604a0f472199dd705e19b1b815f99b68d60bc257c7

Time: 116.381
There were 7 failures:
1) testByteBufferShiftedAlias(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: Overlapping buffers test failed with buffer type: direct buffers and output offset -1
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:583)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
Caused by: java.lang.RuntimeException: error:1e000067:Cipher functions:OPENSSL_internal:BUFFER_TOO_SMALL
	at org.conscrypt.NativeCrypto.EVP_AEAD_CTX_seal(Native Method)
	at org.conscrypt.OpenSSLCipher$EVP_AEAD.doFinalInternal(OpenSSLCipher.java:1213)
	at org.conscrypt.OpenSSLCipher.engineDoFinal(OpenSSLCipher.java:389)
	at javax.crypto.CipherSpi.bufferCrypt(CipherSpi.java:830)
	at javax.crypto.CipherSpi.engineDoFinal(CipherSpi.java:730)
	at javax.crypto.Cipher.doFinal(Cipher.java:2460)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:562)
	... 32 more
2) testByteBufferSize(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: ciphertext size:32 expected:<16> but was:<32>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferSize(AesGcmTest.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
3) testEmptyPlaintext(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testEmptyPlaintext(CipherInputStreamTest.java:261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
4) testCorruptAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testCorruptAesGcm(CipherInputStreamTest.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
5) testAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testAesGcm(CipherInputStreamTest.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
6) testEmptyPlaintext(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testEmptyPlaintext(CipherOutputStreamTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
7) testAesGcm(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testAesGcm(CipherOutputStreamTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)

FAILURES!!!
Tests run: 69,  Failures: 7


BazelTestRunner exiting with a return value of 1
JVM shutdown hooks (if any) will run now.
The JVM will exit once they complete.

-- JVM shutdown starting at 2018-04-06 00:56:33 --


exec ${PAGER:-/usr/bin/less} "$0" || exit 1
-----------------------------------------------------------------------------
JUnit4 Test Runner
.testDefaultTagSizeAlgorithmParameterGenerator:java.security.NoSuchAlgorithmException: GCM AlgorithmParameterGenerator not available
......E......E.....
Provider:Conscrypt
AlgorithmParameters.AES
AlgorithmParameters.ChaCha20
AlgorithmParameters.DESEDE
AlgorithmParameters.EC
AlgorithmParameters.GCM
AlgorithmParameters.OAEP
CertificateFactory.X509
Cipher.AES/CBC/NoPadding
Cipher.AES/CBC/NoPadding SupportedKeyFormats
Cipher.AES/CBC/PKCS5Padding
Cipher.AES/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES/CTR/NoPadding
Cipher.AES/CTR/NoPadding SupportedKeyFormats
Cipher.AES/ECB/NoPadding
Cipher.AES/ECB/NoPadding SupportedKeyFormats
Cipher.AES/ECB/PKCS5Padding
Cipher.AES/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES/GCM/NoPadding
Cipher.AES/GCM/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/NoPadding
Cipher.AES_128/CBC/NoPadding SupportedKeyFormats
Cipher.AES_128/CBC/PKCS5Padding
Cipher.AES_128/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/ECB/NoPadding
Cipher.AES_128/ECB/NoPadding SupportedKeyFormats
Cipher.AES_128/ECB/PKCS5Padding
Cipher.AES_128/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_128/GCM/NoPadding
Cipher.AES_128/GCM/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/NoPadding
Cipher.AES_256/CBC/NoPadding SupportedKeyFormats
Cipher.AES_256/CBC/PKCS5Padding
Cipher.AES_256/CBC/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/ECB/NoPadding
Cipher.AES_256/ECB/NoPadding SupportedKeyFormats
Cipher.AES_256/ECB/PKCS5Padding
Cipher.AES_256/ECB/PKCS5Padding SupportedKeyFormats
Cipher.AES_256/GCM/NoPadding
Cipher.AES_256/GCM/NoPadding SupportedKeyFormats
Cipher.ARC4
Cipher.ARC4 SupportedKeyFormats
Cipher.ChaCha20
Cipher.ChaCha20 SupportedKeyFormats
Cipher.ChaCha20/Poly1305/NoPadding
Cipher.ChaCha20/Poly1305/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/NoPadding
Cipher.DESEDE/CBC/NoPadding SupportedKeyFormats
Cipher.DESEDE/CBC/PKCS5Padding
Cipher.DESEDE/CBC/PKCS5Padding SupportedKeyFormats
Cipher.RSA/ECB/NoPadding
Cipher.RSA/ECB/NoPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPPadding
Cipher.RSA/ECB/OAEPPadding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-1AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-224AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-256AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-384AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding
Cipher.RSA/ECB/OAEPWithSHA-512AndMGF1Padding SupportedKeyClasses
Cipher.RSA/ECB/PKCS1Padding
Cipher.RSA/ECB/PKCS1Padding SupportedKeyClasses
KeyAgreement.ECDH
KeyAgreement.ECDH SupportedKeyClasses
KeyAgreement.ECDH SupportedKeyFormats
KeyFactory.EC
KeyFactory.RSA
KeyGenerator.AES
KeyGenerator.ChaCha20
KeyGenerator.DESEDE
KeyGenerator.HmacMD5
KeyGenerator.HmacSHA1
KeyGenerator.HmacSHA224
KeyGenerator.HmacSHA256
KeyGenerator.HmacSHA384
KeyGenerator.HmacSHA512
KeyPairGenerator.EC
KeyPairGenerator.RSA
Mac.HmacMD5
Mac.HmacMD5 SupportedKeyClasses
Mac.HmacMD5 SupportedKeyFormats
Mac.HmacSHA1
Mac.HmacSHA1 SupportedKeyClasses
Mac.HmacSHA1 SupportedKeyFormats
Mac.HmacSHA224
Mac.HmacSHA224 SupportedKeyClasses
Mac.HmacSHA224 SupportedKeyFormats
Mac.HmacSHA256
Mac.HmacSHA256 SupportedKeyClasses
Mac.HmacSHA256 SupportedKeyFormats
Mac.HmacSHA384
Mac.HmacSHA384 SupportedKeyClasses
Mac.HmacSHA384 SupportedKeyFormats
Mac.HmacSHA512
Mac.HmacSHA512 SupportedKeyClasses
Mac.HmacSHA512 SupportedKeyFormats
MessageDigest.MD5
MessageDigest.SHA-1
MessageDigest.SHA-224
MessageDigest.SHA-256
MessageDigest.SHA-384
MessageDigest.SHA-512
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SSLContext.Default
SSLContext.SSL
SSLContext.TLS
SSLContext.TLSv1
SSLContext.TLSv1.1
SSLContext.TLSv1.2
SecretKeyFactory.DESEDE
SecureRandom.SHA1PRNG
SecureRandom.SHA1PRNG ImplementedIn
Signature.MD5WithRSA
Signature.MD5WithRSA SupportedKeyClasses
Signature.MD5WithRSA SupportedKeyFormats
Signature.NONEwithECDSA
Signature.NONEwithECDSA SupportedKeyClasses
Signature.NONEwithECDSA SupportedKeyFormats
Signature.NONEwithRSA
Signature.NONEwithRSA SupportedKeyClasses
Signature.SHA1WithRSA
Signature.SHA1WithRSA SupportedKeyClasses
Signature.SHA1WithRSA SupportedKeyFormats
Signature.SHA1withECDSA
Signature.SHA1withECDSA SupportedKeyClasses
Signature.SHA1withECDSA SupportedKeyFormats
Signature.SHA1withRSA/PSS
Signature.SHA1withRSA/PSS SupportedKeyClasses
Signature.SHA1withRSA/PSS SupportedKeyFormats
Signature.SHA224WithRSA
Signature.SHA224WithRSA SupportedKeyClasses
Signature.SHA224WithRSA SupportedKeyFormats
Signature.SHA224withECDSA
Signature.SHA224withECDSA SupportedKeyClasses
Signature.SHA224withECDSA SupportedKeyFormats
Signature.SHA224withRSA/PSS
Signature.SHA224withRSA/PSS SupportedKeyClasses
Signature.SHA224withRSA/PSS SupportedKeyFormats
Signature.SHA256WithRSA
Signature.SHA256WithRSA SupportedKeyClasses
Signature.SHA256WithRSA SupportedKeyFormats
Signature.SHA256withECDSA
Signature.SHA256withECDSA SupportedKeyClasses
Signature.SHA256withECDSA SupportedKeyFormats
Signature.SHA256withRSA/PSS
Signature.SHA256withRSA/PSS SupportedKeyClasses
Signature.SHA256withRSA/PSS SupportedKeyFormats
Signature.SHA384WithRSA
Signature.SHA384WithRSA SupportedKeyClasses
Signature.SHA384WithRSA SupportedKeyFormats
Signature.SHA384withECDSA
Signature.SHA384withECDSA SupportedKeyClasses
Signature.SHA384withECDSA SupportedKeyFormats
Signature.SHA384withRSA/PSS
Signature.SHA384withRSA/PSS SupportedKeyClasses
Signature.SHA384withRSA/PSS SupportedKeyFormats
Signature.SHA512WithRSA
Signature.SHA512WithRSA SupportedKeyClasses
Signature.SHA512WithRSA SupportedKeyFormats
Signature.SHA512withECDSA
Signature.SHA512withECDSA SupportedKeyClasses
Signature.SHA512withECDSA SupportedKeyFormats
Signature.SHA512withRSA/PSS
Signature.SHA512withRSA/PSS SupportedKeyClasses
Signature.SHA512withRSA/PSS SupportedKeyFormats

Provider:SUN
AlgorithmParameterGenerator.DSA
AlgorithmParameterGenerator.DSA ImplementedIn
AlgorithmParameterGenerator.DSA KeySize
AlgorithmParameters.DSA
AlgorithmParameters.DSA ImplementedIn
CertPathBuilder.PKIX
CertPathBuilder.PKIX ImplementedIn
CertPathBuilder.PKIX ValidationAlgorithm
CertPathValidator.PKIX
CertPathValidator.PKIX ImplementedIn
CertPathValidator.PKIX ValidationAlgorithm
CertStore.Collection
CertStore.Collection ImplementedIn
CertStore.LDAP
CertStore.LDAP ImplementedIn
CertStore.LDAP LDAPSchema
CertStore.com.sun.security.IndexedCollection
CertStore.com.sun.security.IndexedCollection ImplementedIn
CertificateFactory.X.509
CertificateFactory.X.509 ImplementedIn
Configuration.JavaLoginConfig
KeyFactory.DSA
KeyFactory.DSA ImplementedIn
KeyPairGenerator.DSA
KeyPairGenerator.DSA ImplementedIn
KeyPairGenerator.DSA KeySize
KeyStore.CaseExactJKS
KeyStore.DKS
KeyStore.JKS
KeyStore.JKS ImplementedIn
MessageDigest.MD2
MessageDigest.MD5
MessageDigest.MD5 ImplementedIn
MessageDigest.SHA
MessageDigest.SHA ImplementedIn
MessageDigest.SHA-224
MessageDigest.SHA-256
MessageDigest.SHA-384
MessageDigest.SHA-512
Policy.JavaPolicy
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SecureRandom.NativePRNG
SecureRandom.NativePRNGBlocking
SecureRandom.NativePRNGNonBlocking
SecureRandom.SHA1PRNG
SecureRandom.SHA1PRNG ImplementedIn
Signature.NONEwithDSA
Signature.NONEwithDSA KeySize
Signature.NONEwithDSA SupportedKeyClasses
Signature.SHA1withDSA
Signature.SHA1withDSA ImplementedIn
Signature.SHA1withDSA KeySize
Signature.SHA1withDSA SupportedKeyClasses
Signature.SHA224withDSA
Signature.SHA224withDSA KeySize
Signature.SHA224withDSA SupportedKeyClasses
Signature.SHA256withDSA
Signature.SHA256withDSA KeySize
Signature.SHA256withDSA SupportedKeyClasses

Provider:SunRsaSign
KeyFactory.RSA
KeyPairGenerator.RSA
Provider.id className
Provider.id info
Provider.id name
Provider.id version
Signature.MD2withRSA
Signature.MD2withRSA SupportedKeyClasses
Signature.MD5withRSA
Signature.MD5withRSA SupportedKeyClasses
Signature.SHA1withRSA
Signature.SHA1withRSA SupportedKeyClasses
Signature.SHA224withRSA
Signature.SHA224withRSA SupportedKeyClasses
Signature.SHA256withRSA
Signature.SHA256withRSA SupportedKeyClasses
Signature.SHA384withRSA
Signature.SHA384withRSA SupportedKeyClasses
Signature.SHA512withRSA
Signature.SHA512withRSA SupportedKeyClasses

Provider:SunEC
AlgorithmParameters.EC
AlgorithmParameters.EC ImplementedIn
AlgorithmParameters.EC KeySize
AlgorithmParameters.EC SupportedCurves
KeyAgreement.ECDH
KeyAgreement.ECDH ImplementedIn
KeyAgreement.ECDH SupportedKeyClasses
KeyFactory.EC
KeyFactory.EC ImplementedIn
KeyPairGenerator.EC
KeyPairGenerator.EC ImplementedIn
KeyPairGenerator.EC KeySize
Provider.id className
Provider.id info
Provider.id name
Provider.id version
Signature.NONEwithECDSA
Signature.NONEwithECDSA ImplementedIn
Signature.NONEwithECDSA SupportedKeyClasses
Signature.SHA1withECDSA
Signature.SHA1withECDSA ImplementedIn
Signature.SHA1withECDSA KeySize
Signature.SHA1withECDSA SupportedKeyClasses
Signature.SHA224withECDSA
Signature.SHA224withECDSA ImplementedIn
Signature.SHA224withECDSA SupportedKeyClasses
Signature.SHA256withECDSA
Signature.SHA256withECDSA ImplementedIn
Signature.SHA256withECDSA SupportedKeyClasses
Signature.SHA384withECDSA
Signature.SHA384withECDSA ImplementedIn
Signature.SHA384withECDSA SupportedKeyClasses
Signature.SHA512withECDSA
Signature.SHA512withECDSA ImplementedIn
Signature.SHA512withECDSA SupportedKeyClasses

Provider:SunJSSE
KeyFactory.RSA
KeyManagerFactory.NewSunX509
KeyManagerFactory.SunX509
KeyPairGenerator.RSA
KeyStore.PKCS12
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SSLContext.Default
SSLContext.TLS
SSLContext.TLSv1
SSLContext.TLSv1.1
SSLContext.TLSv1.2
Signature.MD2withRSA
Signature.MD5andSHA1withRSA
Signature.MD5withRSA
Signature.SHA1withRSA
TrustManagerFactory.PKIX
TrustManagerFactory.SunX509

Provider:SunJCE
AlgorithmParameterGenerator.DiffieHellman
AlgorithmParameters.AES
AlgorithmParameters.Blowfish
AlgorithmParameters.DES
AlgorithmParameters.DESede
AlgorithmParameters.DiffieHellman
AlgorithmParameters.GCM
AlgorithmParameters.OAEP
AlgorithmParameters.PBE
AlgorithmParameters.PBES2
AlgorithmParameters.PBEWithHmacSHA1AndAES_128
AlgorithmParameters.PBEWithHmacSHA1AndAES_256
AlgorithmParameters.PBEWithHmacSHA224AndAES_128
AlgorithmParameters.PBEWithHmacSHA224AndAES_256
AlgorithmParameters.PBEWithHmacSHA256AndAES_128
AlgorithmParameters.PBEWithHmacSHA256AndAES_256
AlgorithmParameters.PBEWithHmacSHA384AndAES_128
AlgorithmParameters.PBEWithHmacSHA384AndAES_256
AlgorithmParameters.PBEWithHmacSHA512AndAES_128
AlgorithmParameters.PBEWithHmacSHA512AndAES_256
AlgorithmParameters.PBEWithMD5AndDES
AlgorithmParameters.PBEWithMD5AndTripleDES
AlgorithmParameters.PBEWithSHA1AndDESede
AlgorithmParameters.PBEWithSHA1AndRC2_128
AlgorithmParameters.PBEWithSHA1AndRC2_40
AlgorithmParameters.PBEWithSHA1AndRC4_128
AlgorithmParameters.PBEWithSHA1AndRC4_40
AlgorithmParameters.RC2
Cipher.AES
Cipher.AES SupportedKeyFormats
Cipher.AES SupportedModes
Cipher.AES SupportedPaddings
Cipher.AESWrap
Cipher.AESWrap SupportedKeyFormats
Cipher.AESWrap SupportedModes
Cipher.AESWrap SupportedPaddings
Cipher.AESWrap_128
Cipher.AESWrap_192
Cipher.AESWrap_256
Cipher.AES_128/CBC/NoPadding
Cipher.AES_128/CFB/NoPadding
Cipher.AES_128/ECB/NoPadding
Cipher.AES_128/GCM/NoPadding
Cipher.AES_128/OFB/NoPadding
Cipher.AES_192/CBC/NoPadding
Cipher.AES_192/CFB/NoPadding
Cipher.AES_192/ECB/NoPadding
Cipher.AES_192/GCM/NoPadding
Cipher.AES_192/OFB/NoPadding
Cipher.AES_256/CBC/NoPadding
Cipher.AES_256/CFB/NoPadding
Cipher.AES_256/ECB/NoPadding
Cipher.AES_256/GCM/NoPadding
Cipher.AES_256/OFB/NoPadding
Cipher.ARCFOUR
Cipher.ARCFOUR SupportedKeyFormats
Cipher.ARCFOUR SupportedModes
Cipher.ARCFOUR SupportedPaddings
Cipher.Blowfish
Cipher.Blowfish SupportedKeyFormats
Cipher.Blowfish SupportedModes
Cipher.Blowfish SupportedPaddings
Cipher.DES
Cipher.DES SupportedKeyFormats
Cipher.DES SupportedModes
Cipher.DES SupportedPaddings
Cipher.DESede
Cipher.DESede SupportedKeyFormats
Cipher.DESede SupportedModes
Cipher.DESede SupportedPaddings
Cipher.DESedeWrap
Cipher.DESedeWrap SupportedKeyFormats
Cipher.DESedeWrap SupportedModes
Cipher.DESedeWrap SupportedPaddings
Cipher.PBEWithHmacSHA1AndAES_128
Cipher.PBEWithHmacSHA1AndAES_256
Cipher.PBEWithHmacSHA224AndAES_128
Cipher.PBEWithHmacSHA224AndAES_256
Cipher.PBEWithHmacSHA256AndAES_128
Cipher.PBEWithHmacSHA256AndAES_256
Cipher.PBEWithHmacSHA384AndAES_128
Cipher.PBEWithHmacSHA384AndAES_256
Cipher.PBEWithHmacSHA512AndAES_128
Cipher.PBEWithHmacSHA512AndAES_256
Cipher.PBEWithMD5AndDES
Cipher.PBEWithMD5AndTripleDES
Cipher.PBEWithSHA1AndDESede
Cipher.PBEWithSHA1AndRC2_128
Cipher.PBEWithSHA1AndRC2_40
Cipher.PBEWithSHA1AndRC4_128
Cipher.PBEWithSHA1AndRC4_40
Cipher.RC2
Cipher.RC2 SupportedKeyFormats
Cipher.RC2 SupportedModes
Cipher.RC2 SupportedPaddings
Cipher.RSA
Cipher.RSA SupportedKeyClasses
Cipher.RSA SupportedModes
Cipher.RSA SupportedPaddings
KeyAgreement.DiffieHellman
KeyAgreement.DiffieHellman SupportedKeyClasses
KeyFactory.DiffieHellman
KeyGenerator.AES
KeyGenerator.ARCFOUR
KeyGenerator.Blowfish
KeyGenerator.DES
KeyGenerator.DESede
KeyGenerator.HmacMD5
KeyGenerator.HmacSHA1
KeyGenerator.HmacSHA224
KeyGenerator.HmacSHA256
KeyGenerator.HmacSHA384
KeyGenerator.HmacSHA512
KeyGenerator.RC2
KeyGenerator.SunTls12Prf
KeyGenerator.SunTlsKeyMaterial
KeyGenerator.SunTlsMasterSecret
KeyGenerator.SunTlsPrf
KeyGenerator.SunTlsRsaPremasterSecret
KeyPairGenerator.DiffieHellman
KeyStore.JCEKS
Mac.HmacMD5
Mac.HmacMD5 SupportedKeyFormats
Mac.HmacPBESHA1
Mac.HmacPBESHA1 SupportedKeyFormats
Mac.HmacSHA1
Mac.HmacSHA1 SupportedKeyFormats
Mac.HmacSHA224
Mac.HmacSHA224 SupportedKeyFormats
Mac.HmacSHA256
Mac.HmacSHA256 SupportedKeyFormats
Mac.HmacSHA384
Mac.HmacSHA384 SupportedKeyFormats
Mac.HmacSHA512
Mac.HmacSHA512 SupportedKeyFormats
Mac.PBEWithHmacSHA1
Mac.PBEWithHmacSHA1 SupportedKeyFormatS
Mac.PBEWithHmacSHA224
Mac.PBEWithHmacSHA224 SupportedKeyFormats
Mac.PBEWithHmacSHA256
Mac.PBEWithHmacSHA256 SupportedKeyFormats
Mac.PBEWithHmacSHA384
Mac.PBEWithHmacSHA384 SupportedKeyFormats
Mac.PBEWithHmacSHA512
Mac.PBEWithHmacSHA512 SupportedKeyFormats
Mac.SslMacMD5
Mac.SslMacMD5 SupportedKeyFormats
Mac.SslMacSHA1
Mac.SslMacSHA1 SupportedKeyFormats
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SecretKeyFactory.DES
SecretKeyFactory.DESede
SecretKeyFactory.PBEWithHmacSHA1AndAES_128
SecretKeyFactory.PBEWithHmacSHA1AndAES_256
SecretKeyFactory.PBEWithHmacSHA224AndAES_128
SecretKeyFactory.PBEWithHmacSHA224AndAES_256
SecretKeyFactory.PBEWithHmacSHA256AndAES_128
SecretKeyFactory.PBEWithHmacSHA256AndAES_256
SecretKeyFactory.PBEWithHmacSHA384AndAES_128
SecretKeyFactory.PBEWithHmacSHA384AndAES_256
SecretKeyFactory.PBEWithHmacSHA512AndAES_128
SecretKeyFactory.PBEWithHmacSHA512AndAES_256
SecretKeyFactory.PBEWithMD5AndDES
SecretKeyFactory.PBEWithMD5AndTripleDES
SecretKeyFactory.PBEWithSHA1AndDESede
SecretKeyFactory.PBEWithSHA1AndRC2_128
SecretKeyFactory.PBEWithSHA1AndRC2_40
SecretKeyFactory.PBEWithSHA1AndRC4_128
SecretKeyFactory.PBEWithSHA1AndRC4_40
SecretKeyFactory.PBKDF2WithHmacSHA1
SecretKeyFactory.PBKDF2WithHmacSHA224
SecretKeyFactory.PBKDF2WithHmacSHA256
SecretKeyFactory.PBKDF2WithHmacSHA384
SecretKeyFactory.PBKDF2WithHmacSHA512

Provider:SunJGSS
GssApiMechanism.1.2.840.113554.1.2.2
GssApiMechanism.1.3.6.1.5.5.2
Provider.id className
Provider.id info
Provider.id name
Provider.id version

Provider:SunSASL
Provider.id className
Provider.id info
Provider.id name
Provider.id version
SaslClientFactory.CRAM-MD5
SaslClientFactory.DIGEST-MD5
SaslClientFactory.EXTERNAL
SaslClientFactory.GSSAPI
SaslClientFactory.NTLM
SaslClientFactory.PLAIN
SaslServerFactory.CRAM-MD5
SaslServerFactory.DIGEST-MD5
SaslServerFactory.GSSAPI
SaslServerFactory.NTLM

Provider:XMLDSig
KeyInfoFactory.DOM
Provider.id className
Provider.id info
Provider.id name
Provider.id version
TransformService.http://www.w3.org/2000/09/xmldsig#base64
TransformService.http://www.w3.org/2000/09/xmldsig#base64 MechanismType
TransformService.http://www.w3.org/2000/09/xmldsig#enveloped-signature
TransformService.http://www.w3.org/2000/09/xmldsig#enveloped-signature MechanismType
TransformService.http://www.w3.org/2001/10/xml-exc-c14n#
TransformService.http://www.w3.org/2001/10/xml-exc-c14n# MechanismType
TransformService.http://www.w3.org/2001/10/xml-exc-c14n#WithComments
TransformService.http://www.w3.org/2001/10/xml-exc-c14n#WithComments MechanismType
TransformService.http://www.w3.org/2002/06/xmldsig-filter2
TransformService.http://www.w3.org/2002/06/xmldsig-filter2 MechanismType
TransformService.http://www.w3.org/2006/12/xml-c14n11
TransformService.http://www.w3.org/2006/12/xml-c14n11 MechanismType
TransformService.http://www.w3.org/2006/12/xml-c14n11#WithComments
TransformService.http://www.w3.org/2006/12/xml-c14n11#WithComments MechanismType
TransformService.http://www.w3.org/TR/1999/REC-xpath-19991116
TransformService.http://www.w3.org/TR/1999/REC-xpath-19991116 MechanismType
TransformService.http://www.w3.org/TR/1999/REC-xslt-19991116
TransformService.http://www.w3.org/TR/1999/REC-xslt-19991116 MechanismType
TransformService.http://www.w3.org/TR/2001/REC-xml-c14n-20010315
TransformService.http://www.w3.org/TR/2001/REC-xml-c14n-20010315 MechanismType
TransformService.http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments
TransformService.http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments MechanismType
XMLSignatureFactory.DOM

Provider:SunPCSC
Provider.id className
Provider.id info
Provider.id name
Provider.id version
TerminalFactory.PC/SC
.E.E.Skipping testAesEax
.E.E.Skipping testAesEax
.E..java.security.spec.InvalidKeySpecException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
..Encoded ECPrivateKey:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b0201010420681c3fd33297cc7085e6a2ab96b013854f440318fd05cd2f0bd998bc5e8fcb8ea14403420004db0e5d4ff1aefa02fd9e89f98bb7691c490dc89dfe41c18c73b4461fecc35eea6ba7a6e242e2e3cf8038beac5473113635c24492b1867f25362c01a63205add4
...testWrongOrder: ECDHC not supported
testWrongOrder: ECDHC not supported
..testModifiedPublic:public point not on curve throws java.security.InvalidKeyException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:public point = (0,0) throws java.security.InvalidKeyException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 1 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:order = 26959946660873538060741835960514744168612397095220107664918121663170 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:cofactor = 2 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:cofactor = None throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:modified prime throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:0f000080:elliptic curve routines:OPENSSL_internal:DECODE_ERROR
testModifiedPublic:a = 0 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:order = 0 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:cofactor = -1 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testModifiedPublic:cofactor = 0 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: IOException: Only named ECParameters supported
testWrongOrder: ECDHC not supported
.Generated shared secret with a modified order:ECDH
expected:05c5ab197b2ce0e92560b94d35a8b0fd74b17fa67bdfea442ea7196cf23ba6d6 computed:05c5ab197b2ce0e92560b94d35a8b0fd74b17fa67bdfea442ea7196cf23ba6d6
testWrongOrder: can't modify order.
..testModifiedPublic:public point not on curve throws java.security.InvalidKeyException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:public point = (0,0) throws java.security.InvalidKeyException: org.conscrypt.OpenSSLX509CertificateFactory$ParsingException: Error parsing public key
testModifiedPublic:order = 1 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: EC parameters error
testModifiedPublic:order = 26959946660873538060741835960514744168612397095220107664918121663170 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: EC parameters error
testModifiedPublic:generator = (0,0) throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: EC parameters error
testModifiedPublic:generator not on curve throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: EC parameters error
testModifiedPublic:cofactor = 2 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: EC parameters error
modified prime throws java.lang.IllegalArgumentException: first coefficient is too large
testModifiedPublic:using secp224r1 throws java.security.InvalidKeyException: error:0f000078:elliptic curve routines:OPENSSL_internal:POINT_IS_NOT_ON_CURVE
testModifiedPublic:a = 0 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: EC parameters error
testModifiedPublic:new curve with generator of order 3 that is also on secp256r1 throws java.security.spec.InvalidKeySpecException: java.security.InvalidKeyException: EC parameters error
order = -115792089210356248762697446949407573529996955224135760342422259061068512044369 throws java.lang.IllegalArgumentException: n is not positive
order = 0 throws java.lang.IllegalArgumentException: n is not positive
cofactor = -1 throws java.lang.IllegalArgumentException: h is not positive
cofactor = 0 throws java.lang.IllegalArgumentException: h is not positive
testWrongOrder: ECDHC not supported
.....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Curve:secp256r1
Order:115792089210356248762697446949407573529996955224135760342422259061068512044369
Private key:
S:51960316606265081544687965366214918106270765247170103551400791125721595126581
encoded:308187020100301306072a8648ce3d020106082a8648ce3d030107046d306b020101042072e07f3b79eaff36061f39f5f0044ae871115d38f6f9ac4ba8ac441245fa2335a14403420004097d292e4cba7d6ca74301ef2584a64d7ba2b6cc01d03e8bc65ed44f038097d960b8603c58575b937fedbd240c53d04421b93f034732f8e91624ec5d28fccecf
Public key:
X:4291955740184912316612093208454070108183248153202999420950575102305702549465
Y:43747797518462306471831980660987368580663604532726865985179372866304147771087
encoded:3059301306072a8648ce3d020106082a8648ce3d03010703420004097d292e4cba7d6ca74301ef2584a64d7ba2b6cc01d03e8bc65ed44f038097d960b8603c58575b937fedbd240c53d04421b93f034732f8e91624ec5d28fccecf
Signature:304402205b8c5f99166b58a1c58a748d146be9c1301ba1c4aace02f3f6b0263e51b5725402201d0d1a8a8e1785a5d02c1d693cc5dbc11add1f97a0987ce2e9db742ba4e2c346
r:41408487603282030415343416996443145046407776240712836945244840544568742343252
s:13140224801598522712283509237813148947023737148337037593170219640474801718086
.Conscrypt curve:secp256r1 countLsb:494 countMsb:501
Conscrypt curve:secp224r1 countLsb:483 countMsb:519
Conscrypt curve:secp384r1 countLsb:511 countMsb:514
Conscrypt curve:secp521r1 countLsb:500 countMsb:556
Conscrypt curve:brainpoolP256r1 countLsb:486 countMsb:515
..testTiming algorithm:SHA256WithECDSA
count:50000 cutoff:349931 relative average:1.004052121107007 sigmas:1.5693797564253769
count:25041 cutoff:39318 relative average:1.0049570790859916 sigmas:1.358664753986472
count:12519 cutoff:39093 relative average:1.0007022957313807 sigmas:0.1361023035683595
count:6284 cutoff:38972 relative average:1.0037075224257037 sigmas:0.5090524150510641
count:3127 cutoff:38892 relative average:0.9946437369037198 sigmas:0.5187838754423801
count:1563 cutoff:38837 relative average:0.9841092671223877 sigmas:1.0881381668779933
count:787 cutoff:38794 relative average:1.0025121166169606 sigmas:0.12206405403439706
count:394 cutoff:38759 relative average:1.0155271597632511 sigmas:0.5338272753902615
count:197 cutoff:38727 relative average:1.0114321373712922 sigmas:0.27792087910370167
count:99 cutoff:38699 relative average:1.025476906150289 sigmas:0.43906105026091863
count:49 cutoff:38671 relative average:1.0740730863402321 sigmas:0.8980884431030283
count:25 cutoff:38647 relative average:1.115231075531731 sigmas:0.9979303871588238
count:13 cutoff:38632 relative average:1.256567375195096 sigmas:1.6022627445477065
..................testDefaultSize: keysize=2048
....Message:Hello
Hash:185f8db32271fe25f561a6fc938b2e264306ec304eda518007d1764826381969
Public key:
Modulus:17448444141705520141592074532543626434330358064825014667079186856037254320751463330289974621932458298460071535848147068624915855931652124162238545831147370424164620631691894029860086969496672516076436652149013177819041708252999529687845510723103811501421773868041322444710543703527073582620521032194035154742093517992300806456886438475508084682993410545269132715562208881150695251881475998028534644015899709088585213827980997160888082724558327667765325260133726161824319778649061999799754536159363118674949772223426038124960618692485773895463837344164368862130671724525958049064814621336064770661117489043635928213309
E:65537
encoded:30820122300d06092a864886f70d01010105000382010f003082010a02820101008a37e2a1682886ffd2e99ba89c33641e9fa68209466f83b6eebbb7c21a62a42c241d241de1602d15920b693c4deae931a01b594eebeec3db275e1de69cba852cb3736fb8f7352cd3d2022dbef23ea2d6bc73ef6c1e795d4191f95504d2d929538fb50f1d1175c60b98c86099feedf02e03e3fd64496e456f48db1822e9126fc1981274b8c5a99bc6f35744462eb87e8f801a302c423480da135e6117bec25e1b71816fe46aadf3f031f75e4db38c6eda9937c44afe45c130d7be747b076d137c034597c97560c3664caf511480f2c4ab5573d0f35b81499b1f61ce54d909ffeca017135c25ea930ba2e8de8d0ac86110237c83e35963ebf0b11ef42a1cfea73d0203010001
Private key:
D:4129751763188201713174320828105504698660532967980426553067714526411368698541836267265711603340179240681804166017799613271516582987988799059196533311867226701472901001395987217055628713968409230406024797134586842665060430864494899137174659193759628486264306351436943605919215079378979841567636785188180360754655884315969817414746083253983094185795012303890653444438022340019166634498713401826143459439183131578375380811892933591146870398083406586766234055046579606480448266980283357358323690846429897133348495513379450435310977451969066231688251183984483012516818914018943611708431794254439466402449805377435576417155
encoded:308204bd020100300d06092a864886f70d0101010500048204a7308204a302010002820101008a37e2a1682886ffd2e99ba89c33641e9fa68209466f83b6eebbb7c21a62a42c241d241de1602d15920b693c4deae931a01b594eebeec3db275e1de69cba852cb3736fb8f7352cd3d2022dbef23ea2d6bc73ef6c1e795d4191f95504d2d929538fb50f1d1175c60b98c86099feedf02e03e3fd64496e456f48db1822e9126fc1981274b8c5a99bc6f35744462eb87e8f801a302c423480da135e6117bec25e1b71816fe46aadf3f031f75e4db38c6eda9937c44afe45c130d7be747b076d137c034597c97560c3664caf511480f2c4ab5573d0f35b81499b1f61ce54d909ffeca017135c25ea930ba2e8de8d0ac86110237c83e35963ebf0b11ef42a1cfea73d02030100010282010020b6c479ae74f52ae4a92d11f5d2860e677c1a0806f74ae607d03f587e353da542f0f0c4efbc7b3f413f592b90479ae5077fa19e37e25dd1e799f39acb1aac7d9d85a37a546c6e0d3e860c7cc6ca43716ece43eb43b536f8d78b7b6f765636dd53c4a76c9a5ed53e966d4acbf8162a0442207aaf7b5fd1a85ac69c8a5abee5db43be77431de155e14cdd45f84b1d87917a340e42a4005096fb98aa8da71d7a6cc17b240e5f2db39b94d3f6c9fa5a273c908d65eaedf890017b29746891e9d8d1d3c3440992ba8dc84c5a1161eb4e7fc29fde7b4a980b3112ca505208c58000c1e8ab45091da1e621a4391975064d933945195d530baeaf241d4286b34d49bb8302818100c3736d2c25a7c2df67fabf1a9948585757792009aed3b156eec3405ab2d3d94c15869447d64b27557740f14562f1b1af9b7417e659ef234be559825ffc9ee6f9e328c87c8005d4fd09cba3bcaf8f8922ebc4aca098778a6632cbcec41fb90e84fb9c8b8c976825cf443b52ca49b83e73fff0596d8185e2a3b64d2b0ed7f19dcf02818100b50987696b7e1e032284eec4ed9cedf73c775dd721d2ecd9ecf3d139c9d6f9afc7d9db941385bbb5408cd370a66c27bf1587d293e4f7ba63371e17e8499667447b6915f4d6fc67b57b75692a6bbdd678234b17bac5a633a88f7c56575b174a6968dd18b99a8e9c478b9d3007b61a51518718c382b538cd6736ddd585311d1933028180562d2e95a884af8791711d91bcc4092f79820e7e36776059d42c82d37ac5ada9be53f84d344f2ea8a04c221555eafb4d525d7dac333b1d74f94ade1134715ba6126289035bef3659db57ce7a036e6628df8b7811d727ddfdf1a7ab230e59a9ed38836d842fbddbede747c0d93067ec217957a01688655fe88f18b7437433344102818022a107fdea49dd83cbfe918da9c5f2deeffa0541397f173f384c0b217ab25c607b61f8d682457a7a593696db5d7a22c0326620a9998aa964810e88942e3f4ed192a9af417e3e19b8653d38389d135b0aeff5553cacc1f5efb042a06165533730a296683c588c1ee8b09408b3f0e967d4a87adc2b0c6f291b2d2b91c44078c87102818100c263dc6078f2cc9097b8b964838333b668b5c649a35deffcd3a322e09c148b2d9591348df11b3b4d33721785a9d68fd4f5e9d241dbfcd08416b74bb56527bb6591f6088e7fb654b81d3d48f8860fca33ead4f1344c0768c4aa62d1ad321a8b400fde9b0d1252863341bbda6e699397208f3e75a1880f9bbcfe4fc7b89ca3fb7e
Signature:561a19aad000b8afda84869c73f31926cbccfdeafcb62ab705fc3e086353b1580ea0cae555d0d3a50933fbdb9f03ee60d378730ef6ea8fcd7546e5b94f8e781be6438c6f14cef8be750fdf838cf984a9c5c50eddb36994cedd1330d9beb3cd6173a9931b393238b1e905eeb13b41360fc00447c4aebc36a4e5291bd483f5ec0d3e81afb811ef915b4aabb2bff3d8b080776375cf10465fd7685aec60e20821f311bb812c8bdf154f617a7a0e2076003f8ece34672584b084847e3d07d42ce17a27e890f5470bacafa0b901b4015412322d7a487e90507812e579e485ee1cc7435921e88b9827c3de575a0ed05889dc96a87265f7d15cf52c43eb2c1d8cebafa0
..Rejected legacy signature:253e1d19bbe91064f2364c1e7db3ba8eb6dc5b19202e440eab6fbdf28c8c6ec05b812983713c338c72b6e99b8edf506a89ff9fc8e5c2c52362097a56dc228060eca01e1ff318c6c81617691438703411c1f953b21cd74331f87c9b8b189fdffdfe8550bd2bd1d47be915f8604a0f472199dd705e19b1b815f99b68d60bc257c7

Time: 116.574
There were 7 failures:
1) testByteBufferShiftedAlias(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: Overlapping buffers test failed with buffer type: direct buffers and output offset -1
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:583)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
Caused by: java.lang.RuntimeException: error:1e000067:Cipher functions:OPENSSL_internal:BUFFER_TOO_SMALL
	at org.conscrypt.NativeCrypto.EVP_AEAD_CTX_seal(Native Method)
	at org.conscrypt.OpenSSLCipher$EVP_AEAD.doFinalInternal(OpenSSLCipher.java:1213)
	at org.conscrypt.OpenSSLCipher.engineDoFinal(OpenSSLCipher.java:389)
	at javax.crypto.CipherSpi.bufferCrypt(CipherSpi.java:830)
	at javax.crypto.CipherSpi.engineDoFinal(CipherSpi.java:730)
	at javax.crypto.Cipher.doFinal(Cipher.java:2460)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferShiftedAlias(AesGcmTest.java:562)
	... 32 more
2) testByteBufferSize(com.google.security.wycheproof.AesGcmTest)
java.lang.AssertionError: ciphertext size:32 expected:<16> but was:<32>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotEquals(Assert.java:743)
	at org.junit.Assert.assertEquals(Assert.java:118)
	at org.junit.Assert.assertEquals(Assert.java:555)
	at com.google.security.wycheproof.AesGcmTest.testByteBufferSize(AesGcmTest.java:355)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
3) testEmptyPlaintext(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testEmptyPlaintext(CipherInputStreamTest.java:261)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
4) testCorruptAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testCorruptAesGcm(CipherInputStreamTest.java:244)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
5) testAesGcm(com.google.security.wycheproof.CipherInputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherInputStreamTest$TestVector.<init>(CipherInputStreamTest.java:77)
	at com.google.security.wycheproof.CipherInputStreamTest.getTestVectors(CipherInputStreamTest.java:97)
	at com.google.security.wycheproof.CipherInputStreamTest.testAesGcm(CipherInputStreamTest.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
6) testEmptyPlaintext(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testEmptyPlaintext(CipherOutputStreamTest.java:217)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)
7) testAesGcm(com.google.security.wycheproof.CipherOutputStreamTest)
java.security.InvalidKeyException: Illegal key size
	at javax.crypto.Cipher.checkCryptoPerm(Cipher.java:1039)
	at javax.crypto.Cipher.implInit(Cipher.java:805)
	at javax.crypto.Cipher.chooseProvider(Cipher.java:864)
	at javax.crypto.Cipher.init(Cipher.java:1396)
	at javax.crypto.Cipher.init(Cipher.java:1327)
	at com.google.security.wycheproof.CipherOutputStreamTest$TestVector.<init>(CipherOutputStreamTest.java:76)
	at com.google.security.wycheproof.CipherOutputStreamTest.getTestVectors(CipherOutputStreamTest.java:96)
	at com.google.security.wycheproof.CipherOutputStreamTest.testAesGcm(CipherOutputStreamTest.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at org.junit.runners.Suite.runChild(Suite.java:127)
	at org.junit.runners.Suite.runChild(Suite.java:26)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
	at com.google.testing.junit.runner.internal.junit4.CancellableRequestFactory$CancellableRunner.run(CancellableRequestFactory.java:89)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
	at com.google.testing.junit.runner.junit4.JUnit4Runner.run(JUnit4Runner.java:112)
	at com.google.testing.junit.runner.BazelTestRunner.runTestsInSuite(BazelTestRunner.java:144)
	at com.google.testing.junit.runner.BazelTestRunner.main(BazelTestRunner.java:82)

FAILURES!!!
Tests run: 69,  Failures: 7


BazelTestRunner exiting with a return value of 1
JVM shutdown hooks (if any) will run now.
The JVM will exit once they complete.

-- JVM shutdown starting at 2018-04-06 18:01:29 --

